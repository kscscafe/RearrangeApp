{"ast":null,"code":"\"use strict\";\n\nconst assign = require(\"object-assign\");\nconst SurnamePinyinData = require(\"../data/surname\");\nconst CompoundSurnamePinyinData = require(\"../data/compound_surname\");\n\n// XXX: Symbol when web support.\nconst PINYIN_STYLE = {\n  NORMAL: 0,\n  // 普通风格，不带声调。\n  TONE: 1,\n  // 标准风格，声调在韵母的第一个字母上。\n  TONE2: 2,\n  // 声调以数字形式在拼音之后，使用数字 0~4 标识。\n  TO3NE: 5,\n  // 声调以数字形式在声母之后，使用数字 0~4 标识。\n  INITIALS: 3,\n  // 仅需要声母部分。\n  FIRST_LETTER: 4 // 仅保留首字母。\n};\n// 拼音模式。\nconst PINYIN_MODE = {\n  NORMAL: 0,\n  // 普通模式\n  SURNAME: 1,\n  // 姓氏\n  PLACENAME: 2 // 地名\n};\nconst DEFAULT_OPTIONS = {\n  mode: PINYIN_MODE.NORMAL,\n  // 拼音模式。\n  style: PINYIN_STYLE.TONE,\n  // 风格。\n  segment: false,\n  // 分词。\n  heteronym: false // 多音字。\n};\n\n// 声母表。\nconst INITIALS = \"b,p,m,f,d,t,n,l,g,k,h,j,q,x,r,zh,ch,sh,z,c,s\".split(\",\");\n// 韵母表。\n//const FINALS = \"ang,eng,ing,ong,an,en,in,un,er,ai,ei,ui,ao,ou,iu,ie,ve,a,o,e,i,u,v\".split(\",\");\n// 带声调字符。\nconst PHONETIC_SYMBOL = require(\"./phonetic-symbol\");\nconst RE_PHONETIC_SYMBOL = new RegExp(\"([\" + Object.keys(PHONETIC_SYMBOL).join(\"\") + \"])\", \"g\");\nconst RE_TONE2 = /([aeoiuvnm])([0-4])$/;\nconst util = require(\"./util\");\n\n/*\n * 格式化拼音为声母（Initials）形式。\n * @param {String}\n * @return {String}\n */\nfunction initials(pinyin) {\n  for (let i = 0, l = INITIALS.length; i < l; i++) {\n    if (pinyin.indexOf(INITIALS[i]) === 0) {\n      return INITIALS[i];\n    }\n  }\n  return \"\";\n}\nclass Pinyin {\n  constructor(dict) {\n    this._dict = dict;\n  }\n\n  // @param {String} hans 要转为拼音的目标字符串（汉字）。\n  // @param {Object} options, 可选，用于指定拼音风格，是否启用多音字。\n  // @return {Array} 返回的拼音列表。\n  convert(hans, options) {\n    if (typeof hans !== \"string\") {\n      return [];\n    }\n    options = assign({}, DEFAULT_OPTIONS, options);\n    let pys = [];\n    let nohans = \"\";\n    if (options.mode === PINYIN_MODE.SURNAME) {\n      pys.push(this.surname_pinyin(hans, options));\n    } else {\n      for (let i = 0, firstCharCode, words, l = hans.length; i < l; i++) {\n        words = hans[i];\n        firstCharCode = words.charCodeAt(0);\n        if (this._dict[firstCharCode]) {\n          // ends of non-chinese words.\n          if (nohans.length > 0) {\n            pys.push([nohans]);\n            nohans = \"\"; // reset non-chinese words.\n          }\n          pys.push(this.single_pinyin(words, options));\n        } else {\n          nohans += words;\n        }\n      }\n    }\n\n    // 清理最后的非中文字符串。\n    if (nohans.length > 0) {\n      pys.push([nohans]);\n    }\n    Object.defineProperty(pys, \"compact\", {\n      value: util.compact.bind(this, pys),\n      enumerable: false,\n      configurable: false\n    });\n    return pys;\n  }\n\n  // 单字拼音转换。\n  // @param {String} han, 单个汉字\n  // @return {Array} 返回拼音列表，多音字会有多个拼音项。\n  single_pinyin(han, options) {\n    if (typeof han !== \"string\") {\n      return [];\n    }\n    if (han.length !== 1) {\n      return this.single_pinyin(han.charAt(0), options);\n    }\n    let hanCode = han.charCodeAt(0);\n    if (!this._dict[hanCode]) {\n      return [han];\n    }\n    let pys = this._dict[hanCode].split(\",\");\n    if (!options.heteronym) {\n      return [Pinyin.toFixed(pys[0], options.style)];\n    }\n\n    // 临时存储已存在的拼音，避免多音字拼音转换为非注音风格出现重复。\n    let py_cached = {};\n    let pinyins = [];\n    for (let i = 0, py, l = pys.length; i < l; i++) {\n      py = Pinyin.toFixed(pys[i], options.style);\n      if (py_cached.hasOwnProperty(py)) {\n        continue;\n      }\n      py_cached[py] = py;\n      pinyins.push(py);\n    }\n    return pinyins;\n  }\n\n  // 姓名转成拼音\n  surname_pinyin(hans, options) {\n    return this.compound_surname(hans, options);\n  }\n\n  // 复姓处理\n  compound_surname(hans, options) {\n    let len = hans.length;\n    let prefixIndex = 0;\n    let result = [];\n    function toFixed(item) {\n      return item.map(ch => Pinyin.toFixed(ch, options.style));\n    }\n    for (let i = 0; i < len; i++) {\n      const twowords = hans.substring(i, i + 2);\n      if (CompoundSurnamePinyinData.hasOwnProperty(twowords)) {\n        if (prefixIndex <= i - 1) {\n          result = result.concat(this.single_surname(hans.substring(prefixIndex, i), options));\n        }\n        result = result.concat(CompoundSurnamePinyinData[twowords].map(toFixed));\n        i = i + 2;\n        prefixIndex = i;\n      }\n    }\n    // 处理复姓后面剩余的部分。\n    result = result.concat(this.single_surname(hans.substring(prefixIndex, len), options));\n    return result;\n  }\n\n  // 单姓处理\n  single_surname(hans, options) {\n    let result = [];\n    function toFixed(item) {\n      return item.map(ch => Pinyin.toFixed(ch, options.style));\n    }\n    for (let i = 0, l = hans.length; i < l; i++) {\n      const word = hans.charAt(i);\n      if (SurnamePinyinData.hasOwnProperty(word)) {\n        result = result.concat(SurnamePinyinData[word].map(toFixed));\n      } else {\n        result.push(this.single_pinyin(word, options));\n      }\n    }\n    return result;\n  }\n\n  /**\n   * 格式化拼音风格。\n   *\n   * @param {String} pinyin TONE 风格的拼音。\n   * @param {ENUM} style 目标转换的拼音风格。\n   * @return {String} 转换后的拼音。\n   */\n  static toFixed(pinyin, style) {\n    let tone = \"\"; // 声调。\n    let first_letter;\n    let py;\n    switch (style) {\n      case PINYIN_STYLE.INITIALS:\n        return initials(pinyin);\n      case PINYIN_STYLE.FIRST_LETTER:\n        first_letter = pinyin.charAt(0);\n        if (PHONETIC_SYMBOL.hasOwnProperty(first_letter)) {\n          first_letter = PHONETIC_SYMBOL[first_letter].charAt(0);\n        }\n        return first_letter;\n      case PINYIN_STYLE.NORMAL:\n        return pinyin.replace(RE_PHONETIC_SYMBOL, function ($0, $1_phonetic) {\n          return PHONETIC_SYMBOL[$1_phonetic].replace(RE_TONE2, \"$1\");\n        });\n      case PINYIN_STYLE.TO3NE:\n        return pinyin.replace(RE_PHONETIC_SYMBOL, function ($0, $1_phonetic) {\n          return PHONETIC_SYMBOL[$1_phonetic];\n        });\n      case PINYIN_STYLE.TONE2:\n        py = pinyin.replace(RE_PHONETIC_SYMBOL, function ($0, $1) {\n          // 声调数值。\n          tone = PHONETIC_SYMBOL[$1].replace(RE_TONE2, \"$2\");\n          return PHONETIC_SYMBOL[$1].replace(RE_TONE2, \"$1\");\n        });\n        return py + tone;\n      case PINYIN_STYLE.TONE:\n      default:\n        return pinyin;\n    }\n  }\n\n  /**\n   * 比较两个汉字转成拼音后的排序顺序，可以用作默认的拼音排序算法。\n   *\n   * @param {String} hanA 汉字字符串 A。\n   * @return {String} hanB 汉字字符串 B。\n   * @return {Number} 返回 -1，0，或 1。\n   */\n  compare(hanA, hanB) {\n    const pinyinA = this.convert(hanA, DEFAULT_OPTIONS);\n    const pinyinB = this.convert(hanB, DEFAULT_OPTIONS);\n    return String(pinyinA).localeCompare(String(pinyinB));\n  }\n  compact(arr) {\n    return util.compact(arr);\n  }\n  static get STYLE_NORMAL() {\n    return PINYIN_STYLE.NORMAL;\n  }\n  static get STYLE_TONE() {\n    return PINYIN_STYLE.TONE;\n  }\n  static get STYLE_TONE2() {\n    return PINYIN_STYLE.TONE2;\n  }\n  static get STYLE_TO3NE() {\n    return PINYIN_STYLE.TO3NE;\n  }\n  static get STYLE_INITIALS() {\n    return PINYIN_STYLE.INITIALS;\n  }\n  static get STYLE_FIRST_LETTER() {\n    return PINYIN_STYLE.FIRST_LETTER;\n  }\n  static get MODE_NORMAL() {\n    return PINYIN_MODE.NORMAL;\n  }\n  static get MODE_SURNAME() {\n    return PINYIN_MODE.SURNAME;\n  }\n  static get MODE_PLACENAME() {\n    return PINYIN_MODE.PLACENAME;\n  }\n  static get DEFAULT_OPTIONS() {\n    return DEFAULT_OPTIONS;\n  }\n}\nmodule.exports = Pinyin;","map":{"version":3,"names":["assign","require","SurnamePinyinData","CompoundSurnamePinyinData","PINYIN_STYLE","NORMAL","TONE","TONE2","TO3NE","INITIALS","FIRST_LETTER","PINYIN_MODE","SURNAME","PLACENAME","DEFAULT_OPTIONS","mode","style","segment","heteronym","split","PHONETIC_SYMBOL","RE_PHONETIC_SYMBOL","RegExp","Object","keys","join","RE_TONE2","util","initials","pinyin","i","l","length","indexOf","Pinyin","constructor","dict","_dict","convert","hans","options","pys","nohans","push","surname_pinyin","firstCharCode","words","charCodeAt","single_pinyin","defineProperty","value","compact","bind","enumerable","configurable","han","charAt","hanCode","toFixed","py_cached","pinyins","py","hasOwnProperty","compound_surname","len","prefixIndex","result","item","map","ch","twowords","substring","concat","single_surname","word","tone","first_letter","replace","$0","$1_phonetic","$1","compare","hanA","hanB","pinyinA","pinyinB","String","localeCompare","arr","STYLE_NORMAL","STYLE_TONE","STYLE_TONE2","STYLE_TO3NE","STYLE_INITIALS","STYLE_FIRST_LETTER","MODE_NORMAL","MODE_SURNAME","MODE_PLACENAME","module","exports"],"sources":["/Users/ksugizaki/Library/CloudStorage/OneDrive-個人用/10_MacBookPro2018/メモ・作業ログ/RearrengeWebAPP/node_modules/pinyin/lib/pinyin.js"],"sourcesContent":["\"use strict\";\n\nconst assign = require(\"object-assign\");\nconst SurnamePinyinData = require(\"../data/surname\");\nconst CompoundSurnamePinyinData = require(\"../data/compound_surname\");\n\n// XXX: Symbol when web support.\nconst PINYIN_STYLE = {\n  NORMAL: 0,       // 普通风格，不带声调。\n  TONE: 1,         // 标准风格，声调在韵母的第一个字母上。\n  TONE2: 2,        // 声调以数字形式在拼音之后，使用数字 0~4 标识。\n  TO3NE: 5,        // 声调以数字形式在声母之后，使用数字 0~4 标识。\n  INITIALS: 3,     // 仅需要声母部分。\n  FIRST_LETTER: 4, // 仅保留首字母。\n};\n// 拼音模式。\nconst PINYIN_MODE = {\n  NORMAL: 0, // 普通模式\n  SURNAME: 1, // 姓氏\n  PLACENAME: 2, // 地名\n};\nconst DEFAULT_OPTIONS = {\n  mode: PINYIN_MODE.NORMAL, // 拼音模式。\n  style: PINYIN_STYLE.TONE, // 风格。\n  segment: false,           // 分词。\n  heteronym: false,         // 多音字。\n};\n\n// 声母表。\nconst INITIALS = \"b,p,m,f,d,t,n,l,g,k,h,j,q,x,r,zh,ch,sh,z,c,s\".split(\",\");\n// 韵母表。\n//const FINALS = \"ang,eng,ing,ong,an,en,in,un,er,ai,ei,ui,ao,ou,iu,ie,ve,a,o,e,i,u,v\".split(\",\");\n// 带声调字符。\nconst PHONETIC_SYMBOL = require(\"./phonetic-symbol\");\nconst RE_PHONETIC_SYMBOL = new RegExp(\"([\" + Object.keys(PHONETIC_SYMBOL).join(\"\") + \"])\", \"g\");\nconst RE_TONE2 = /([aeoiuvnm])([0-4])$/;\nconst util = require(\"./util\");\n\n/*\n * 格式化拼音为声母（Initials）形式。\n * @param {String}\n * @return {String}\n */\nfunction initials(pinyin) {\n  for (let i = 0, l = INITIALS.length; i < l; i++){\n    if (pinyin.indexOf(INITIALS[i]) === 0) {\n      return INITIALS[i];\n    }\n  }\n  return \"\";\n}\n\nclass Pinyin {\n  constructor (dict) {\n    this._dict = dict;\n  }\n\n  // @param {String} hans 要转为拼音的目标字符串（汉字）。\n  // @param {Object} options, 可选，用于指定拼音风格，是否启用多音字。\n  // @return {Array} 返回的拼音列表。\n  convert (hans, options) {\n\n    if (typeof hans !== \"string\") {\n      return [];\n    }\n\n    options = assign({}, DEFAULT_OPTIONS, options);\n\n    let pys = [];\n    let nohans = \"\";\n\n    if (options.mode === PINYIN_MODE.SURNAME) {\n      pys.push(this.surname_pinyin(hans, options));\n    } else {\n\n      for(let i = 0, firstCharCode, words, l = hans.length; i < l; i++) {\n\n        words = hans[i];\n        firstCharCode = words.charCodeAt(0);\n\n        if(this._dict[firstCharCode]) {\n\n          // ends of non-chinese words.\n          if(nohans.length > 0) {\n            pys.push([nohans]);\n            nohans = \"\"; // reset non-chinese words.\n          }\n\n          pys.push(this.single_pinyin(words, options));\n\n        } else {\n          nohans += words;\n        }\n      }\n\n    }\n\n    // 清理最后的非中文字符串。\n    if(nohans.length > 0){\n      pys.push([nohans]);\n    }\n\n    Object.defineProperty(pys, \"compact\", {\n      value: util.compact.bind(this, pys),\n      enumerable: false,\n      configurable: false,\n    });\n\n    return pys;\n  }\n\n  // 单字拼音转换。\n  // @param {String} han, 单个汉字\n  // @return {Array} 返回拼音列表，多音字会有多个拼音项。\n  single_pinyin(han, options) {\n\n    if (typeof han !== \"string\") {\n      return [];\n    }\n    if (han.length !== 1) {\n      return this.single_pinyin(han.charAt(0), options);\n    }\n\n    let hanCode = han.charCodeAt(0);\n\n    if (!this._dict[hanCode]) {\n      return [han];\n    }\n\n    let pys = this._dict[hanCode].split(\",\");\n    if(!options.heteronym){\n      return [Pinyin.toFixed(pys[0], options.style)];\n    }\n\n    // 临时存储已存在的拼音，避免多音字拼音转换为非注音风格出现重复。\n    let py_cached = {};\n    let pinyins = [];\n    for(let i = 0, py, l = pys.length; i < l; i++){\n      py = Pinyin.toFixed(pys[i], options.style);\n      if(py_cached.hasOwnProperty(py)){\n        continue;\n      }\n      py_cached[py] = py;\n\n      pinyins.push(py);\n    }\n    return pinyins;\n  }\n\n  // 姓名转成拼音\n  surname_pinyin(hans, options) {\n    return this.compound_surname(hans, options);\n  }\n\n  // 复姓处理\n  compound_surname(hans, options) {\n    let len = hans.length;\n    let prefixIndex = 0;\n    let result = [];\n    function toFixed(item) {\n      return item.map(ch => Pinyin.toFixed(ch, options.style));\n    }\n    for (let i = 0; i < len; i++) {\n      const twowords = hans.substring(i, i + 2);\n      if (CompoundSurnamePinyinData.hasOwnProperty(twowords)) {\n        if (prefixIndex <= i - 1) {\n          result = result.concat(\n            this.single_surname(\n              hans.substring(prefixIndex, i),\n              options\n            )\n          );\n        }\n        result = result.concat(CompoundSurnamePinyinData[twowords].map(toFixed));\n\n        i = i + 2;\n        prefixIndex = i;\n      }\n    }\n    // 处理复姓后面剩余的部分。\n    result = result.concat(\n      this.single_surname(\n        hans.substring(prefixIndex, len),\n        options\n      )\n    );\n    return result;\n  }\n\n  // 单姓处理\n  single_surname(hans, options) {\n    let result = [];\n    function toFixed(item) {\n      return item.map(ch => Pinyin.toFixed(ch, options.style));\n    }\n    for (let i = 0, l = hans.length; i < l; i++) {\n      const word = hans.charAt(i);\n      if (SurnamePinyinData.hasOwnProperty(word)) {\n        result = result.concat(SurnamePinyinData[word].map(toFixed));\n      } else {\n        result.push(this.single_pinyin(word, options));\n      }\n    }\n    return result;\n  }\n\n  /**\n   * 格式化拼音风格。\n   *\n   * @param {String} pinyin TONE 风格的拼音。\n   * @param {ENUM} style 目标转换的拼音风格。\n   * @return {String} 转换后的拼音。\n   */\n  static toFixed (pinyin, style) {\n    let tone = \"\"; // 声调。\n    let first_letter;\n    let py;\n    switch(style){\n    case PINYIN_STYLE.INITIALS:\n      return initials(pinyin);\n\n    case PINYIN_STYLE.FIRST_LETTER:\n      first_letter = pinyin.charAt(0);\n      if (PHONETIC_SYMBOL.hasOwnProperty(first_letter)) {\n        first_letter = PHONETIC_SYMBOL[first_letter].charAt(0);\n      }\n      return first_letter;\n\n    case PINYIN_STYLE.NORMAL:\n      return pinyin.replace(RE_PHONETIC_SYMBOL, function($0, $1_phonetic){\n        return PHONETIC_SYMBOL[$1_phonetic].replace(RE_TONE2, \"$1\");\n      });\n\n    case PINYIN_STYLE.TO3NE:\n      return pinyin.replace(RE_PHONETIC_SYMBOL, function($0, $1_phonetic){\n        return PHONETIC_SYMBOL[$1_phonetic];\n      });\n\n    case PINYIN_STYLE.TONE2:\n      py = pinyin.replace(RE_PHONETIC_SYMBOL, function($0, $1){\n        // 声调数值。\n        tone = PHONETIC_SYMBOL[$1].replace(RE_TONE2, \"$2\");\n\n        return PHONETIC_SYMBOL[$1].replace(RE_TONE2, \"$1\");\n      });\n      return py + tone;\n\n    case PINYIN_STYLE.TONE:\n    default:\n      return pinyin;\n    }\n  }\n\n  /**\n   * 比较两个汉字转成拼音后的排序顺序，可以用作默认的拼音排序算法。\n   *\n   * @param {String} hanA 汉字字符串 A。\n   * @return {String} hanB 汉字字符串 B。\n   * @return {Number} 返回 -1，0，或 1。\n   */\n  compare (hanA, hanB) {\n    const pinyinA = this.convert(hanA, DEFAULT_OPTIONS);\n    const pinyinB = this.convert(hanB, DEFAULT_OPTIONS);\n    return String(pinyinA).localeCompare(String(pinyinB));\n  }\n\n  compact(arr) {\n    return util.compact(arr);\n  }\n\n  static get STYLE_NORMAL () {\n    return PINYIN_STYLE.NORMAL;\n  }\n  static get STYLE_TONE () {\n    return PINYIN_STYLE.TONE;\n  }\n  static get STYLE_TONE2 () {\n    return PINYIN_STYLE.TONE2;\n  }\n  static get STYLE_TO3NE () {\n    return PINYIN_STYLE.TO3NE;\n  }\n  static get STYLE_INITIALS () {\n    return PINYIN_STYLE.INITIALS;\n  }\n  static get STYLE_FIRST_LETTER () {\n    return PINYIN_STYLE.FIRST_LETTER;\n  }\n  static get MODE_NORMAL () {\n    return PINYIN_MODE.NORMAL;\n  }\n  static get MODE_SURNAME () {\n    return PINYIN_MODE.SURNAME;\n  }\n  static get MODE_PLACENAME () {\n    return PINYIN_MODE.PLACENAME;\n  }\n  static get DEFAULT_OPTIONS () {\n    return DEFAULT_OPTIONS;\n  }\n}\n\nmodule.exports = Pinyin;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script"}