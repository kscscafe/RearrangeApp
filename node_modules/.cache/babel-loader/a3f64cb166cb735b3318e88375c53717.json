{"ast":null,"code":"var _jsxFileName = \"/Users/ksugizaki/Library/CloudStorage/OneDrive-\\u500B\\u4EBA\\u7528/10_MacBookPro2018/\\u30E1\\u30E2\\u30FB\\u4F5C\\u696D\\u30ED\\u30AF\\u3099/RearrengeWebAPP/src/components/ProblemGroupSelection.js\";\nimport React, { useState } from 'react';\nimport { problemGroups } from '../data/ProblemData';\nimport RearrangeSentence from './RearrangeSentence';\nconst ProblemGroupSelection = () => {\n  const [selectedGroup, setSelectedGroup] = useState(null); // 選択した問題グループの状態\n\n  const handleSelectGroup = group => {\n    setSelectedGroup(group); // グループを選択\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"//            \", /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, \"\\u554F\\u984C\\u30B0\\u30EB\\u30FC\\u30D7\\u3092\\u9078\\u629E\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\"), selectedGroup ?\n  /*#__PURE__*/\n  // 問題グループが選択された場合に問題を表示\n  React.createElement(RearrangeSentence, {\n    group: selectedGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }) :\n  // 問題グループが選択されていない場合にボタンを表示\n  problemGroups.map((group, index) => /*#__PURE__*/React.createElement(\"button\", {\n    key: index,\n    onClick: () => handleSelectGroup(group),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, group.name)));\n};\nexport default ProblemGroupSelection;","map":{"version":3,"names":["React","useState","problemGroups","RearrangeSentence","ProblemGroupSelection","selectedGroup","setSelectedGroup","handleSelectGroup","group","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","key","onClick","name"],"sources":["/Users/ksugizaki/Library/CloudStorage/OneDrive-個人用/10_MacBookPro2018/メモ・作業ログ/RearrengeWebAPP/src/components/ProblemGroupSelection.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { problemGroups } from '../data/ProblemData';\nimport RearrangeSentence from './RearrangeSentence';\n\nconst ProblemGroupSelection = () => {\n    const [selectedGroup, setSelectedGroup] = useState(null); // 選択した問題グループの状態\n\n    const handleSelectGroup = (group) => {\n        setSelectedGroup(group); // グループを選択\n    };\n\n    return (\n        <div>\n//            <h1>問題グループを選択してください</h1>\n            {selectedGroup ? (\n                // 問題グループが選択された場合に問題を表示\n                <RearrangeSentence group={selectedGroup} />\n            ) : (\n                // 問題グループが選択されていない場合にボタンを表示\n                problemGroups.map((group, index) => (\n                    <button key={index} onClick={() => handleSelectGroup(group)}>\n                        {group.name}\n                    </button>\n                ))\n            )}\n        </div>\n    );\n};\n\nexport default ProblemGroupSelection;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,qBAAqB;AACnD,OAAOC,iBAAiB,MAAM,qBAAqB;AAEnD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAChC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1D,MAAMM,iBAAiB,GAAIC,KAAK,IAAK;IACjCF,gBAAgB,CAACE,KAAK,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACIR,KAAA,CAAAS,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAK,gBACC,eAAAf,KAAA,CAAAS,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,4FAAmB,CAAC,EACzBV,aAAa;EAAA;EACV;EACAL,KAAA,CAAAS,aAAA,CAACN,iBAAiB;IAACK,KAAK,EAAEH,aAAc;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC;EAE3C;EACAb,aAAa,CAACc,GAAG,CAAC,CAACR,KAAK,EAAES,KAAK,kBAC3BjB,KAAA,CAAAS,aAAA;IAAQS,GAAG,EAAED,KAAM;IAACE,OAAO,EAAEA,CAAA,KAAMZ,iBAAiB,CAACC,KAAK,CAAE;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvDP,KAAK,CAACY,IACH,CACX,CAEJ,CAAC;AAEd,CAAC;AAED,eAAehB,qBAAqB","ignoreList":[]},"metadata":{},"sourceType":"module"}