{"ast":null,"code":"var _jsxFileName = \"/Users/ksugizaki/Library/CloudStorage/OneDrive-\\u500B\\u4EBA\\u7528/10_MacBookPro2018/\\u30E1\\u30E2\\u30FB\\u4F5C\\u696D\\u30ED\\u30AF\\u3099/RearrengeWebAPP/src/components/RearrangeSentence.js\";\n// src/components/RearrangeSentence.js\n\nimport React, { useState } from 'react';\nimport { problems } from '../data/ProblemData';\nconst RearrangeSentence = () => {\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [resultSymbol, setResultSymbol] = useState(null);\n  const currentProblem = problems[currentProblemIndex];\n  const toggleWordSelection = word => {\n    setSelectedWords(prev => {\n      if (prev.includes(word)) {\n        return prev.filter(w => w !== word);\n      } else {\n        return [...prev, word];\n      }\n    });\n  };\n  const checkAnswer = () => {\n    if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n      setResultSymbol('⚪︎'); // 正解のシンボル\n    } else {\n      setResultSymbol('×'); // 不正解のシンボル\n    }\n    setIsConfirmed(true);\n  };\n  const nextProblem = () => {\n    setCurrentProblemIndex(prev => prev + 1);\n    setSelectedWords([]);\n    setIsConfirmed(false);\n    setResultSymbol(null);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, currentProblem.translation), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, currentProblem.correctOrder.map((word, index) => /*#__PURE__*/React.createElement(\"button\", {\n    key: index,\n    onClick: () => toggleWordSelection(word),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, word))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: checkAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"\\u78BA\\u5B9A\"), isConfirmed && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, resultSymbol), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: nextProblem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"\\u6B21\\u3078\")));\n};\nexport default RearrangeSentence;","map":{"version":3,"names":["React","useState","problems","RearrangeSentence","currentProblemIndex","setCurrentProblemIndex","selectedWords","setSelectedWords","isConfirmed","setIsConfirmed","resultSymbol","setResultSymbol","currentProblem","toggleWordSelection","word","prev","includes","filter","w","checkAnswer","join","correctOrder","nextProblem","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","translation","map","index","key","onClick"],"sources":["/Users/ksugizaki/Library/CloudStorage/OneDrive-個人用/10_MacBookPro2018/メモ・作業ログ/RearrengeWebAPP/src/components/RearrangeSentence.js"],"sourcesContent":["// src/components/RearrangeSentence.js\n\nimport React, { useState } from 'react';\nimport { problems } from '../data/ProblemData';\n\nconst RearrangeSentence = () => {\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n    const [selectedWords, setSelectedWords] = useState([]);\n    const [isConfirmed, setIsConfirmed] = useState(false);\n    const [resultSymbol, setResultSymbol] = useState(null);\n    \n    const currentProblem = problems[currentProblemIndex];\n\n    const toggleWordSelection = (word) => {\n        setSelectedWords(prev => {\n            if (prev.includes(word)) {\n                return prev.filter(w => w !== word);\n            } else {\n                return [...prev, word];\n            }\n        });\n    };\n\n    const checkAnswer = () => {\n        if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n            setResultSymbol('⚪︎'); // 正解のシンボル\n        } else {\n            setResultSymbol('×'); // 不正解のシンボル\n        }\n        setIsConfirmed(true);\n    };\n\n    const nextProblem = () => {\n        setCurrentProblemIndex(prev => prev + 1);\n        setSelectedWords([]);\n        setIsConfirmed(false);\n        setResultSymbol(null);\n    };\n\n    return (\n        <div>\n            <h2>{currentProblem.translation}</h2>\n            <div>\n                {currentProblem.correctOrder.map((word, index) => (\n                    <button key={index} onClick={() => toggleWordSelection(word)}>\n                        {word}\n                    </button>\n                ))}\n            </div>\n            <button onClick={checkAnswer}>確定</button>\n            {isConfirmed && (\n                <div>\n                    <p>{resultSymbol}</p>\n                    <button onClick={nextProblem}>次へ</button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default RearrangeSentence;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}