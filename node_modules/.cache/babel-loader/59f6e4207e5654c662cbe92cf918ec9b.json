{"ast":null,"code":"import React,{useState,useEffect}from'react';import pinyin from'pinyin';// Pinyinライブラリをインポート\nconst RearrangeSentence=_ref=>{let{group}=_ref;const[selectedWords,setSelectedWords]=useState([]);const[isConfirmed,setIsConfirmed]=useState(false);const[resultSymbol,setResultSymbol]=useState(null);const[currentProblemIndex,setCurrentProblemIndex]=useState(0);const[shuffledProblems,setShuffledProblems]=useState([]);const[shuffledWords,setShuffledWords]=useState([]);// 問題をシャッフル\nuseEffect(()=>{const shuffled=[...group.problems].sort(()=>Math.random()-0.5);setShuffledProblems(shuffled);setCurrentProblemIndex(0);// 最初の問題インデックスをリセット\nsetSelectedWords([]);// 選択された単語をリセット\nsetIsConfirmed(false);// 確認フラグをリセット\nsetResultSymbol(null);// 結果シンボルをリセット\n},[group]);const currentProblem=shuffledProblems[currentProblemIndex];// シャッフルされた問題から現在の問題を取得\n// 問題が変更されたときに単語をシャッフル\nuseEffect(()=>{if(currentProblem){const allWords=[...currentProblem.correctOrder];// 正解の単語\nconst shuffled=allWords.sort(()=>Math.random()-0.5);// ランダム化\nsetShuffledWords(shuffled);// シャッフルした単語を保存\n}},[currentProblem]);const toggleWordSelection=word=>{setSelectedWords(prev=>{if(prev.includes(word)){return prev.filter(w=>w!==word);// タップした場合は選択解除\n}else{return[...prev,word];// タップした場合は選択追加\n}});// 読み上げ機能（特定の文字を除外）\nif(!['?','!','？','！'].includes(word)){const utterance=new SpeechSynthesisUtterance(word);utterance.lang='zh-CN';// 中国語を設定\nwindow.speechSynthesis.speak(utterance);// 読み上げ\n}};const checkAnswer=()=>{if(selectedWords.join(',')===currentProblem.correctOrder.join(',')){setResultSymbol('⚪︎');// 正解のシンボル\n}else{setResultSymbol('×');// 不正解のシンボル\n}setIsConfirmed(true);};const nextProblem=()=>{if(currentProblemIndex<shuffledProblems.length-1){setCurrentProblemIndex(prev=>prev+1);setSelectedWords([]);setIsConfirmed(false);setResultSymbol(null);setShuffledWords([]);// 次の問題に進んだらシャッフルをリセット\n}else{// 最後の問題が終わった場合、結果を表示\nalert(\"全ての問題が終了しました！\");// 結果を表示\n}};// 音声を再生する関数\nconst playAudio=()=>{if(currentProblem&&currentProblem.audio){const audio=new Audio(currentProblem.audio);audio.play();}};// Pinyinを生成する関数\nconst generatePinyin=words=>{return words.map(word=>pinyin(word,{style:pinyin.STYLE_TONE}).join(''));// 各単語のPinyinを生成\n};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{style:{display:'flex',alignItems:'center',justifyContent:'space-between'}},/*#__PURE__*/React.createElement(\"span\",{style:{display:'flex',alignItems:'center'}},currentProblem?currentProblem.translation:'問題がありません',currentProblem&&currentProblem.audio&&/*#__PURE__*/React.createElement(\"i\",{className:\"fa-solid fa-circle-play\",style:{cursor:'pointer',marginLeft:'10px'},onClick:playAudio// 音声再生をトリガー\n})),/*#__PURE__*/React.createElement(\"span\",null,\"(\",currentProblemIndex+1,\"/\",shuffledProblems.length,\")\")),/*#__PURE__*/React.createElement(\"div\",{style:{backgroundColor:'white',padding:'10px',borderRadius:'5px',border:'2px solid #f0f0f0',boxShadow:'0 0 5px rgba(0, 0, 0, 0.2)',minHeight:'60px',display:'flex',alignItems:'center'}},selectedWords.join(''),isConfirmed&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{style:{color:'red',fontSize:'20px'}},resultSymbol),resultSymbol==='×'&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},\"\\u6B63\\u89E3: \",currentProblem.correctOrder.join('')))),/*#__PURE__*/React.createElement(\"div\",null,shuffledWords.map((word,index)=>/*#__PURE__*/React.createElement(\"div\",{key:index,style:{display:'inline-block',margin:'5px',textAlign:'center'}},/*#__PURE__*/React.createElement(\"div\",{style:{color:'gray',fontSize:'0.8em'}},generatePinyin([word])[0]),/*#__PURE__*/React.createElement(\"button\",{onClick:()=>toggleWordSelection(word),style:{backgroundColor:selectedWords.includes(word)?'lightgreen':'lightblue',fontSize:'20px',// ボタンの文字サイズを指定\npadding:'10px 15px',// ボタンのパディングを設定\nborder:'none',// 枠線を無しに\nborderRadius:'5px'// 角を丸くする\n}},word)))),/*#__PURE__*/React.createElement(\"div\",{className:\"fixed-button-container\"},/*#__PURE__*/React.createElement(\"button\",{onClick:isConfirmed?nextProblem:checkAnswer,style:{fontSize:'18px'}},isConfirmed?'次へ':'確定')));};export default RearrangeSentence;","map":{"version":3,"names":["React","useState","useEffect","pinyin","RearrangeSentence","_ref","group","selectedWords","setSelectedWords","isConfirmed","setIsConfirmed","resultSymbol","setResultSymbol","currentProblemIndex","setCurrentProblemIndex","shuffledProblems","setShuffledProblems","shuffledWords","setShuffledWords","shuffled","problems","sort","Math","random","currentProblem","allWords","correctOrder","toggleWordSelection","word","prev","includes","filter","w","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","checkAnswer","join","nextProblem","length","alert","playAudio","audio","Audio","play","generatePinyin","words","map","style","STYLE_TONE","createElement","display","alignItems","justifyContent","translation","className","cursor","marginLeft","onClick","backgroundColor","padding","borderRadius","border","boxShadow","minHeight","color","fontSize","index","key","margin","textAlign"],"sources":["/Users/ksugizaki/Library/CloudStorage/OneDrive-個人用/10_MacBookPro2018/メモ・作業ログ/RearrengeWebAPP/src/components/RearrangeSentence.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport pinyin from 'pinyin'; // Pinyinライブラリをインポート\n\nconst RearrangeSentence = ({ group }) => {\n    const [selectedWords, setSelectedWords] = useState([]);\n    const [isConfirmed, setIsConfirmed] = useState(false);\n    const [resultSymbol, setResultSymbol] = useState(null);\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n    const [shuffledProblems, setShuffledProblems] = useState([]);\n    const [shuffledWords, setShuffledWords] = useState([]);\n\n    // 問題をシャッフル\n    useEffect(() => {\n        const shuffled = [...group.problems].sort(() => Math.random() - 0.5);\n        setShuffledProblems(shuffled);\n        setCurrentProblemIndex(0); // 最初の問題インデックスをリセット\n        setSelectedWords([]); // 選択された単語をリセット\n        setIsConfirmed(false); // 確認フラグをリセット\n        setResultSymbol(null); // 結果シンボルをリセット\n    }, [group]);\n\n    const currentProblem = shuffledProblems[currentProblemIndex]; // シャッフルされた問題から現在の問題を取得\n\n    // 問題が変更されたときに単語をシャッフル\n    useEffect(() => {\n        if (currentProblem) {\n            const allWords = [...currentProblem.correctOrder]; // 正解の単語\n            const shuffled = allWords.sort(() => Math.random() - 0.5); // ランダム化\n            setShuffledWords(shuffled); // シャッフルした単語を保存\n        }\n    }, [currentProblem]);\n\n    const toggleWordSelection = (word) => {\n        setSelectedWords(prev => {\n            if (prev.includes(word)) {\n                return prev.filter(w => w !== word); // タップした場合は選択解除\n            } else {\n                return [...prev, word]; // タップした場合は選択追加\n            }\n        });\n\n        // 読み上げ機能（特定の文字を除外）\n        if (!['?', '!', '？', '！'].includes(word)) {\n            const utterance = new SpeechSynthesisUtterance(word);\n            utterance.lang = 'zh-CN'; // 中国語を設定\n            window.speechSynthesis.speak(utterance); // 読み上げ\n        }\n    };\n\n    const checkAnswer = () => {\n        if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n            setResultSymbol('⚪︎'); // 正解のシンボル\n        } else {\n            setResultSymbol('×'); // 不正解のシンボル\n        }\n        setIsConfirmed(true);\n    };\n\n    const nextProblem = () => {\n        if (currentProblemIndex < shuffledProblems.length - 1) {\n            setCurrentProblemIndex(prev => prev + 1);\n            setSelectedWords([]);\n            setIsConfirmed(false);\n            setResultSymbol(null);\n            setShuffledWords([]); // 次の問題に進んだらシャッフルをリセット\n        } else {\n            // 最後の問題が終わった場合、結果を表示\n            alert(\"全ての問題が終了しました！\"); // 結果を表示\n        }\n    };\n\n    // 音声を再生する関数\n    const playAudio = () => {\n        if (currentProblem && currentProblem.audio) {\n            const audio = new Audio(currentProblem.audio);\n            audio.play();\n        }\n    };\n\n    // Pinyinを生成する関数\n    const generatePinyin = (words) => {\n        return words.map(word => pinyin(word, { style: pinyin.STYLE_TONE }).join('')); // 各単語のPinyinを生成\n    };\n\n    return (\n        <div>\n            {/* 問題数と出題順を表示 */}\n            <h2 style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                    {currentProblem ? currentProblem.translation : '問題がありません'}\n                    {/* 再生ボタンを日本語訳のすぐ右側に表示 */}\n                    {currentProblem && currentProblem.audio && (\n                        <i \n                            className=\"fa-solid fa-circle-play\" \n                            style={{ cursor: 'pointer', marginLeft: '10px' }} \n                            onClick={playAudio} // 音声再生をトリガー\n                        ></i>\n                    )}\n                </span>\n                <span>({currentProblemIndex + 1}/{shuffledProblems.length})</span>\n            </h2>\n            <div style={{ \n                backgroundColor: 'white', \n                padding: '10px', \n                borderRadius: '5px',\n                border: '2px solid #f0f0f0', \n                boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)', \n                minHeight: '60px', \n                display: 'flex',\n                alignItems: 'center' \n            }}>\n                {selectedWords.join('')} \n                {isConfirmed && (\n                    <div>\n                        <p style={{ color: 'red', fontSize: '20px' }}>{resultSymbol}</p>\n                        {resultSymbol === '×' && (\n                            <p style={{ color: 'red' }}>正解: {currentProblem.correctOrder.join('')}</p>\n                        )}\n                    </div>\n                )}\n            </div>\n            <div>\n                {shuffledWords.map((word, index) => (\n                    <div key={index} style={{ display: 'inline-block', margin: '5px', textAlign: 'center' }}>\n                        <div style={{ color: 'gray', fontSize: '0.8em' }}>\n                            {generatePinyin([word])[0]} \n                        </div>\n                        <button\n                            onClick={() => toggleWordSelection(word)}\n                            style={{\n                                backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue',\n                                fontSize: '20px', // ボタンの文字サイズを指定\n                                padding: '10px 15px', // ボタンのパディングを設定\n                                border: 'none', // 枠線を無しに\n                                borderRadius: '5px' // 角を丸くする\n                            }}\n                        >\n                            {word}\n                        </button>\n                    </div>\n                ))}\n            </div>\n            <div className=\"fixed-button-container\">\n                <button onClick={isConfirmed ? nextProblem : checkAnswer} style={{ fontSize: '18px' }}>\n                    {isConfirmed ? '次へ' : '確定'}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default RearrangeSentence;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}