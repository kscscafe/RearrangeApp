{"ast":null,"code":"// src/components/RearrangeSentence.js\nimport React,{useState}from'react';import pinyin from'pinyin';// Pinyinライブラリをインポート\nconst RearrangeSentence=_ref=>{let{group}=_ref;const[selectedWords,setSelectedWords]=useState([]);const[isConfirmed,setIsConfirmed]=useState(false);const[resultSymbol,setResultSymbol]=useState(null);const[currentProblemIndex,setCurrentProblemIndex]=useState(0);const[shuffledWords,setShuffledWords]=useState([]);const currentProblem=group.problems[currentProblemIndex];// ランダムに単語ボタンを生成（初回のみ）\nconst getRandomizedWords=()=>{if(shuffledWords.length===0){const allWords=[...currentProblem.correctOrder];// 正解の単語\nconst shuffled=allWords.sort(()=>Math.random()-0.5);// ランダム化\nsetShuffledWords(shuffled);// シャッフルした単語を保存\n}return shuffledWords.length>0?shuffledWords:currentProblem.correctOrder;};const toggleWordSelection=word=>{setSelectedWords(prev=>{if(prev.includes(word)){return prev.filter(w=>w!==word);// タップした場合は選択解除\n}else{return[...prev,word];// タップした場合は選択追加\n}});// 中国語で読み上げ\nconst utterance=new SpeechSynthesisUtterance(word);utterance.lang='zh-CN';// 中国語を設定\nwindow.speechSynthesis.speak(utterance);// 読み上げ\n};const checkAnswer=()=>{if(selectedWords.join(',')===currentProblem.correctOrder.join(',')){setResultSymbol('⚪︎');// 正解のシンボル\n}else{setResultSymbol('×');// 不正解のシンボル\n}setIsConfirmed(true);};const nextProblem=()=>{if(currentProblemIndex<group.problems.length-1){setCurrentProblemIndex(prev=>prev+1);setSelectedWords([]);setIsConfirmed(false);setResultSymbol(null);setShuffledWords([]);// 次の問題に進んだらシャッフルをリセット\n}else{// 最後の問題が終わった場合、結果を表示\nalert(\"全ての問題が終了しました！\");// 結果を表示\n}};// Pinyinを生成する関数\nconst generatePinyin=words=>{return words.map(word=>pinyin(word,{style:pinyin.STYLE_TONE}).join(''));// 各単語のPinyinを生成\n};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",null,currentProblem.translation),/*#__PURE__*/React.createElement(\"div\",{style:{backgroundColor:'white',// 背景を白色に設定\npadding:'10px',borderRadius:'5px',border:'2px solid #f0f0f0',// 枠の色を薄いグレーに設定\nboxShadow:'0 0 5px rgba(0, 0, 0, 0.2)',// やや影をつけて立体感を出す\nminHeight:'60px',// 高さを一定に設定\ndisplay:'flex',alignItems:'center'// 中央揃え\n}},selectedWords.join(''),\" \",isConfirmed&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"p\",{style:{color:'red',fontSize:'20px'}},resultSymbol),resultSymbol==='×'&&/*#__PURE__*/React.createElement(\"p\",{style:{color:'red'}},\"\\u6B63\\u89E3: \",currentProblem.correctOrder.join(' ')))),/*#__PURE__*/React.createElement(\"div\",null,getRandomizedWords().map((word,index)=>/*#__PURE__*/React.createElement(\"div\",{key:index,style:{display:'inline-block',margin:'5px',textAlign:'center'}},/*#__PURE__*/React.createElement(\"div\",{style:{color:'gray',fontSize:'0.8em'}},generatePinyin([word])[0],\" \"),/*#__PURE__*/React.createElement(\"button\",{onClick:()=>toggleWordSelection(word),style:{backgroundColor:selectedWords.includes(word)?'lightgreen':'lightblue'// 選択時の色変更\n}},word)))),/*#__PURE__*/React.createElement(\"button\",{onClick:isConfirmed?nextProblem:checkAnswer},isConfirmed?'次へ':'確定'));};export default RearrangeSentence;","map":{"version":3,"names":["React","useState","pinyin","RearrangeSentence","_ref","group","selectedWords","setSelectedWords","isConfirmed","setIsConfirmed","resultSymbol","setResultSymbol","currentProblemIndex","setCurrentProblemIndex","shuffledWords","setShuffledWords","currentProblem","problems","getRandomizedWords","length","allWords","correctOrder","shuffled","sort","Math","random","toggleWordSelection","word","prev","includes","filter","w","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","checkAnswer","join","nextProblem","alert","generatePinyin","words","map","style","STYLE_TONE","createElement","translation","backgroundColor","padding","borderRadius","border","boxShadow","minHeight","display","alignItems","color","fontSize","index","key","margin","textAlign","onClick"],"sources":["/Users/ksugizaki/Library/CloudStorage/OneDrive-個人用/10_MacBookPro2018/メモ・作業ログ/RearrengeWebAPP/src/components/RearrangeSentence.js"],"sourcesContent":["// src/components/RearrangeSentence.js\n\nimport React, { useState } from 'react';\nimport pinyin from 'pinyin'; // Pinyinライブラリをインポート\n\nconst RearrangeSentence = ({ group }) => {\n    const [selectedWords, setSelectedWords] = useState([]);\n    const [isConfirmed, setIsConfirmed] = useState(false);\n    const [resultSymbol, setResultSymbol] = useState(null);\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n    const [shuffledWords, setShuffledWords] = useState([]);\n\n    const currentProblem = group.problems[currentProblemIndex];\n\n    // ランダムに単語ボタンを生成（初回のみ）\n    const getRandomizedWords = () => {\n        if (shuffledWords.length === 0) {\n            const allWords = [...currentProblem.correctOrder]; // 正解の単語\n            const shuffled = allWords.sort(() => Math.random() - 0.5); // ランダム化\n            setShuffledWords(shuffled); // シャッフルした単語を保存\n        }\n        return shuffledWords.length > 0 ? shuffledWords : currentProblem.correctOrder;\n    };\n\n    const toggleWordSelection = (word) => {\n        setSelectedWords(prev => {\n            if (prev.includes(word)) {\n                return prev.filter(w => w !== word); // タップした場合は選択解除\n            } else {\n                return [...prev, word]; // タップした場合は選択追加\n            }\n        });\n        // 中国語で読み上げ\n        const utterance = new SpeechSynthesisUtterance(word);\n        utterance.lang = 'zh-CN'; // 中国語を設定\n        window.speechSynthesis.speak(utterance); // 読み上げ\n    };\n\n    const checkAnswer = () => {\n        if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n            setResultSymbol('⚪︎'); // 正解のシンボル\n        } else {\n            setResultSymbol('×'); // 不正解のシンボル\n        }\n        setIsConfirmed(true);\n    };\n\n    const nextProblem = () => {\n        if (currentProblemIndex < group.problems.length - 1) {\n            setCurrentProblemIndex(prev => prev + 1);\n            setSelectedWords([]);\n            setIsConfirmed(false);\n            setResultSymbol(null);\n            setShuffledWords([]); // 次の問題に進んだらシャッフルをリセット\n        } else {\n            // 最後の問題が終わった場合、結果を表示\n            alert(\"全ての問題が終了しました！\"); // 結果を表示\n        }\n    };\n\n    // Pinyinを生成する関数\n    const generatePinyin = (words) => {\n        return words.map(word => pinyin(word, { style: pinyin.STYLE_TONE }).join('')); // 各単語のPinyinを生成\n    };\n\n    return (\n        <div>\n            <h2>{currentProblem.translation}</h2>\n            <div style={{ \n                backgroundColor: 'white', // 背景を白色に設定\n                padding: '10px', \n                borderRadius: '5px',\n                border: '2px solid #f0f0f0', // 枠の色を薄いグレーに設定\n                boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)', // やや影をつけて立体感を出す\n                minHeight: '60px', // 高さを一定に設定\n                display: 'flex',\n                alignItems: 'center' // 中央揃え\n            }}>\n                {selectedWords.join('')} {/* 選択された単語を表示 */}\n                {isConfirmed && (\n                    <div>\n                        <p style={{ color: 'red', fontSize: '20px' }}>{resultSymbol}</p>\n                        {resultSymbol === '×' && (\n                            <p style={{ color: 'red' }}>正解: {currentProblem.correctOrder.join(' ')}</p>\n                        )}\n                    </div>\n                )}\n            </div>\n            <div>\n                {getRandomizedWords().map((word, index) => (\n                    <div key={index} style={{ display: 'inline-block', margin: '5px', textAlign: 'center' }}>\n                        <div style={{ color: 'gray', fontSize: '0.8em' }}>\n                            {generatePinyin([word])[0]} {/* Pinyinを表示 */}\n                        </div>\n                        <button\n                            onClick={() => toggleWordSelection(word)}\n                            style={{\n                                backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue' // 選択時の色変更\n                            }}\n                        >\n                            {word}\n                        </button>\n                    </div>\n                ))}\n            </div>\n            <button onClick={isConfirmed ? nextProblem : checkAnswer}>\n                {isConfirmed ? '次へ' : '確定'}\n            </button>\n        </div>\n    );\n};\n\nexport default RearrangeSentence;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}