{"ast":null,"code":"var _jsxFileName = \"/Users/ksugizaki/Library/CloudStorage/OneDrive-\\u500B\\u4EBA\\u7528/10_MacBookPro2018/\\u30E1\\u30E2\\u30FB\\u4F5C\\u696D\\u30ED\\u30AF\\u3099/RearrengeWebAPP/src/components/RearrangeSentence.js\";\nimport React, { useState, useEffect } from 'react';\nimport pinyin from 'pinyin';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleXmark } from '@fortawesome/free-regular-svg-icons';\nconst RearrangeSentence = ({\n  group,\n  onBack\n}) => {\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [resultSymbol, setResultSymbol] = useState(null);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [shuffledProblems, setShuffledProblems] = useState([]);\n  const [shuffledWords, setShuffledWords] = useState([]);\n  const [showTranslation, setShowTranslation] = useState(true);\n  useEffect(() => {\n    const shuffled = [...group.problems].sort(() => Math.random() - 0.5);\n    setShuffledProblems(shuffled);\n    setCurrentProblemIndex(0);\n    setSelectedWords([]);\n    setIsConfirmed(false);\n    setResultSymbol(null);\n  }, [group]);\n  const currentProblem = shuffledProblems[currentProblemIndex];\n  useEffect(() => {\n    if (currentProblem) {\n      const allWords = [...currentProblem.correctOrder];\n      const shuffled = allWords.sort(() => Math.random() - 0.5);\n      setShuffledWords(shuffled);\n    }\n  }, [currentProblem]);\n  const toggleWordSelection = word => {\n    setSelectedWords(prev => {\n      if (prev.includes(word)) {\n        return prev.filter(w => w !== word);\n      } else {\n        return [...prev, word];\n      }\n    });\n    if (!['?', '!', '？', '！'].includes(word)) {\n      const utterance = new SpeechSynthesisUtterance(word);\n      utterance.lang = 'zh-CN';\n      window.speechSynthesis.speak(utterance);\n    }\n  };\n  const checkAnswer = () => {\n    if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n      setResultSymbol('⚪︎');\n    } else {\n      setResultSymbol('×');\n    }\n    setIsConfirmed(true);\n  };\n  const nextProblem = () => {\n    if (currentProblemIndex < shuffledProblems.length - 1) {\n      setCurrentProblemIndex(prev => prev + 1);\n      setSelectedWords([]);\n      setIsConfirmed(false);\n      setResultSymbol(null);\n      setShuffledWords([]);\n    } else {\n      alert(\"全ての問題が終了しました！\");\n    }\n  };\n  const playAudio = () => {\n    if (currentProblem && currentProblem.audio) {\n      const audio = new Audio(currentProblem.audio);\n      audio.play();\n    }\n  };\n  const generatePinyin = words => {\n    return words.map(word => pinyin(word, {\n      style: pinyin.STYLE_TONE\n    }).join(''));\n  };\n  const toggleTranslation = () => {\n    setShowTranslation(prev => !prev);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      top: '20px',\n      left: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCircleXmark,\n    size: \"2x\",\n    onClick: onBack,\n    style: {\n      cursor: 'pointer'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, showTranslation && currentProblem ? currentProblem.translation : '聞こえたとおりにタップしてください', currentProblem && currentProblem.audio && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa-solid fa-circle-play\",\n    style: {\n      cursor: 'pointer',\n      marginLeft: '10px'\n    },\n    onClick: playAudio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 17\n    }\n  }, \"(\", currentProblemIndex + 1, \"/\", shuffledProblems.length, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      padding: '10px',\n      borderRadius: '5px',\n      border: '2px solid #f0f0f0',\n      boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)',\n      minHeight: '60px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, selectedWords.join(''), isConfirmed && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red',\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, resultSymbol), resultSymbol === '×' && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, \"\\u6B63\\u89E3: \", currentProblem.correctOrder.join('')))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, shuffledWords.map((word, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      display: 'inline-block',\n      margin: '5px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'gray',\n      fontSize: '0.8em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 25\n    }\n  }, generatePinyin([word])[0]), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleWordSelection(word),\n    style: {\n      backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue',\n      fontSize: '20px',\n      padding: '10px 15px',\n      border: 'none',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, word)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixed-button-container\",\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: isConfirmed ? nextProblem : checkAnswer,\n    style: {\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, isConfirmed ? '次へ' : '確定')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '20px',\n      left: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showTranslation,\n    onChange: toggleTranslation,\n    style: {\n      marginRight: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }), \"\\u65E5\\u672C\\u8A9E\\u8A33\\u3092\\u8868\\u793A\")));\n};\nexport default RearrangeSentence;","map":{"version":3,"names":["React","useState","useEffect","pinyin","FontAwesomeIcon","faCircleXmark","RearrangeSentence","group","onBack","selectedWords","setSelectedWords","isConfirmed","setIsConfirmed","resultSymbol","setResultSymbol","currentProblemIndex","setCurrentProblemIndex","shuffledProblems","setShuffledProblems","shuffledWords","setShuffledWords","showTranslation","setShowTranslation","shuffled","problems","sort","Math","random","currentProblem","allWords","correctOrder","toggleWordSelection","word","prev","includes","filter","w","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","checkAnswer","join","nextProblem","length","alert","playAudio","audio","Audio","play","generatePinyin","words","map","style","STYLE_TONE","toggleTranslation","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","icon","size","onClick","cursor","display","alignItems","justifyContent","translation","className","marginLeft","backgroundColor","padding","borderRadius","border","boxShadow","minHeight","color","fontSize","index","key","margin","textAlign","marginTop","bottom","type","checked","onChange","marginRight"],"sources":["/Users/ksugizaki/Library/CloudStorage/OneDrive-個人用/10_MacBookPro2018/メモ・作業ログ/RearrengeWebAPP/src/components/RearrangeSentence.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport pinyin from 'pinyin';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCircleXmark } from '@fortawesome/free-regular-svg-icons';\n\nconst RearrangeSentence = ({ group, onBack }) => {\n    const [selectedWords, setSelectedWords] = useState([]);\n    const [isConfirmed, setIsConfirmed] = useState(false);\n    const [resultSymbol, setResultSymbol] = useState(null);\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n    const [shuffledProblems, setShuffledProblems] = useState([]);\n    const [shuffledWords, setShuffledWords] = useState([]);\n    const [showTranslation, setShowTranslation] = useState(true); \n\n    useEffect(() => {\n        const shuffled = [...group.problems].sort(() => Math.random() - 0.5);\n        setShuffledProblems(shuffled);\n        setCurrentProblemIndex(0); \n        setSelectedWords([]);\n        setIsConfirmed(false);\n        setResultSymbol(null);\n    }, [group]);\n\n    const currentProblem = shuffledProblems[currentProblemIndex];\n\n    useEffect(() => {\n        if (currentProblem) {\n            const allWords = [...currentProblem.correctOrder];\n            const shuffled = allWords.sort(() => Math.random() - 0.5);\n            setShuffledWords(shuffled);\n        }\n    }, [currentProblem]);\n\n    const toggleWordSelection = (word) => {\n        setSelectedWords(prev => {\n            if (prev.includes(word)) {\n                return prev.filter(w => w !== word);\n            } else {\n                return [...prev, word];\n            }\n        });\n\n        if (!['?', '!', '？', '！'].includes(word)) {\n            const utterance = new SpeechSynthesisUtterance(word);\n            utterance.lang = 'zh-CN';\n            window.speechSynthesis.speak(utterance);\n        }\n    };\n\n    const checkAnswer = () => {\n        if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n            setResultSymbol('⚪︎');\n        } else {\n            setResultSymbol('×');\n        }\n        setIsConfirmed(true);\n    };\n\n    const nextProblem = () => {\n        if (currentProblemIndex < shuffledProblems.length - 1) {\n            setCurrentProblemIndex(prev => prev + 1);\n            setSelectedWords([]);\n            setIsConfirmed(false);\n            setResultSymbol(null);\n            setShuffledWords([]);\n        } else {\n            alert(\"全ての問題が終了しました！\");\n        }\n    };\n\n    const playAudio = () => {\n        if (currentProblem && currentProblem.audio) {\n            const audio = new Audio(currentProblem.audio);\n            audio.play();\n        }\n    };\n\n    const generatePinyin = (words) => {\n        return words.map(word => pinyin(word, { style: pinyin.STYLE_TONE }).join(''));\n    };\n\n    const toggleTranslation = () => {\n        setShowTranslation(prev => !prev);\n    };\n\n    return (\n        <div>\n            {/* 左上に戻る「×」アイコンを追加 */}\n            <div style={{ position: 'absolute', top: '20px', left: '20px' }}>\n                <FontAwesomeIcon icon={faCircleXmark} size=\"2x\" onClick={onBack} style={{ cursor: 'pointer' }} />\n            </div>\n            \n            <h2 style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                    {showTranslation && currentProblem\n                        ? currentProblem.translation \n                        : '聞こえたとおりにタップしてください'}\n                    {currentProblem && currentProblem.audio && (\n                        <i \n                            className=\"fa-solid fa-circle-play\" \n                            style={{ cursor: 'pointer', marginLeft: '10px' }} \n                            onClick={playAudio}\n                        ></i>\n                    )}\n                </span>\n                <span>({currentProblemIndex + 1}/{shuffledProblems.length})</span>\n            </h2>\n            \n            <div style={{ \n                backgroundColor: 'white', \n                padding: '10px', \n                borderRadius: '5px',\n                border: '2px solid #f0f0f0', \n                boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)', \n                minHeight: '60px', \n                display: 'flex',\n                alignItems: 'center' \n            }}>\n                {selectedWords.join('')} \n                {isConfirmed && (\n                    <div>\n                        <p style={{ color: 'red', fontSize: '20px' }}>{resultSymbol}</p>\n                        {resultSymbol === '×' && (\n                            <p style={{ color: 'red' }}>正解: {currentProblem.correctOrder.join('')}</p>\n                        )}\n                    </div>\n                )}\n            </div>\n            <div>\n                {shuffledWords.map((word, index) => (\n                    <div key={index} style={{ display: 'inline-block', margin: '5px', textAlign: 'center' }}>\n                        <div style={{ color: 'gray', fontSize: '0.8em' }}>\n                            {generatePinyin([word])[0]} \n                        </div>\n                        <button\n                            onClick={() => toggleWordSelection(word)}\n                            style={{\n                                backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue',\n                                fontSize: '20px',\n                                padding: '10px 15px',\n                                border: 'none',\n                                borderRadius: '5px'\n                            }}\n                        >\n                            {word}\n                        </button>\n                    </div>\n                ))}\n            </div>\n            <div className=\"fixed-button-container\" style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n                <button onClick={isConfirmed ? nextProblem : checkAnswer} style={{ fontSize: '18px' }}>\n                    {isConfirmed ? '次へ' : '確定'}\n                </button>\n            </div>\n\n            {/* 日本語訳オン/オフスイッチを画面の左下に配置 */}\n            <div style={{ position: 'fixed', bottom: '20px', left: '20px' }}>\n                <label style={{ display: 'flex', alignItems: 'center' }}>\n                    <input\n                        type=\"checkbox\"\n                        checked={showTranslation}\n                        onChange={toggleTranslation}\n                        style={{ marginRight: '8px' }}\n                    />\n                    日本語訳を表示\n                </label>\n            </div>\n        </div>\n    );\n};\n\nexport default RearrangeSentence;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAC3B,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,aAAa,QAAQ,qCAAqC;AAEnE,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAO,CAAC,KAAK;EAC7C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACc,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACgB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACkB,aAAa,EAAEC,gBAAgB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACoB,eAAe,EAAEC,kBAAkB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACZ,MAAMqB,QAAQ,GAAG,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,CAACC,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;IACpET,mBAAmB,CAACK,QAAQ,CAAC;IAC7BP,sBAAsB,CAAC,CAAC,CAAC;IACzBN,gBAAgB,CAAC,EAAE,CAAC;IACpBE,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,IAAI,CAAC;EACzB,CAAC,EAAE,CAACP,KAAK,CAAC,CAAC;EAEX,MAAMqB,cAAc,GAAGX,gBAAgB,CAACF,mBAAmB,CAAC;EAE5Db,SAAS,CAAC,MAAM;IACZ,IAAI0B,cAAc,EAAE;MAChB,MAAMC,QAAQ,GAAG,CAAC,GAAGD,cAAc,CAACE,YAAY,CAAC;MACjD,MAAMP,QAAQ,GAAGM,QAAQ,CAACJ,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC;MACzDP,gBAAgB,CAACG,QAAQ,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACK,cAAc,CAAC,CAAC;EAEpB,MAAMG,mBAAmB,GAAIC,IAAI,IAAK;IAClCtB,gBAAgB,CAACuB,IAAI,IAAI;MACrB,IAAIA,IAAI,CAACC,QAAQ,CAACF,IAAI,CAAC,EAAE;QACrB,OAAOC,IAAI,CAACE,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAKJ,IAAI,CAAC;MACvC,CAAC,MAAM;QACH,OAAO,CAAC,GAAGC,IAAI,EAAED,IAAI,CAAC;MAC1B;IACJ,CAAC,CAAC;IAEF,IAAI,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAACE,QAAQ,CAACF,IAAI,CAAC,EAAE;MACtC,MAAMK,SAAS,GAAG,IAAIC,wBAAwB,CAACN,IAAI,CAAC;MACpDK,SAAS,CAACE,IAAI,GAAG,OAAO;MACxBC,MAAM,CAACC,eAAe,CAACC,KAAK,CAACL,SAAS,CAAC;IAC3C;EACJ,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIlC,aAAa,CAACmC,IAAI,CAAC,GAAG,CAAC,KAAKhB,cAAc,CAACE,YAAY,CAACc,IAAI,CAAC,GAAG,CAAC,EAAE;MACnE9B,eAAe,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM;MACHA,eAAe,CAAC,GAAG,CAAC;IACxB;IACAF,cAAc,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMiC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAI9B,mBAAmB,GAAGE,gBAAgB,CAAC6B,MAAM,GAAG,CAAC,EAAE;MACnD9B,sBAAsB,CAACiB,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MACxCvB,gBAAgB,CAAC,EAAE,CAAC;MACpBE,cAAc,CAAC,KAAK,CAAC;MACrBE,eAAe,CAAC,IAAI,CAAC;MACrBM,gBAAgB,CAAC,EAAE,CAAC;IACxB,CAAC,MAAM;MACH2B,KAAK,CAAC,eAAe,CAAC;IAC1B;EACJ,CAAC;EAED,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACpB,IAAIpB,cAAc,IAAIA,cAAc,CAACqB,KAAK,EAAE;MACxC,MAAMA,KAAK,GAAG,IAAIC,KAAK,CAACtB,cAAc,CAACqB,KAAK,CAAC;MAC7CA,KAAK,CAACE,IAAI,CAAC,CAAC;IAChB;EACJ,CAAC;EAED,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAC9B,OAAOA,KAAK,CAACC,GAAG,CAACtB,IAAI,IAAI7B,MAAM,CAAC6B,IAAI,EAAE;MAAEuB,KAAK,EAAEpD,MAAM,CAACqD;IAAW,CAAC,CAAC,CAACZ,IAAI,CAAC,EAAE,CAAC,CAAC;EACjF,CAAC;EAED,MAAMa,iBAAiB,GAAGA,CAAA,KAAM;IAC5BnC,kBAAkB,CAACW,IAAI,IAAI,CAACA,IAAI,CAAC;EACrC,CAAC;EAED,oBACIjC,KAAA,CAAA0D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAEIhE,KAAA,CAAA0D,aAAA;IAAKH,KAAK,EAAE;MAAEU,QAAQ,EAAE,UAAU;MAAEC,GAAG,EAAE,MAAM;MAAEC,IAAI,EAAE;IAAO,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5DhE,KAAA,CAAA0D,aAAA,CAACtD,eAAe;IAACgE,IAAI,EAAE/D,aAAc;IAACgE,IAAI,EAAC,IAAI;IAACC,OAAO,EAAE9D,MAAO;IAAC+C,KAAK,EAAE;MAAEgB,MAAM,EAAE;IAAU,CAAE;IAAAZ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC/F,CAAC,eAENhE,KAAA,CAAA0D,aAAA;IAAIH,KAAK,EAAE;MAAEiB,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE,QAAQ;MAAEC,cAAc,EAAE;IAAgB,CAAE;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClFhE,KAAA,CAAA0D,aAAA;IAAMH,KAAK,EAAE;MAAEiB,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAClD3C,eAAe,IAAIO,cAAc,GAC5BA,cAAc,CAAC+C,WAAW,GAC1B,mBAAmB,EACxB/C,cAAc,IAAIA,cAAc,CAACqB,KAAK,iBACnCjD,KAAA,CAAA0D,aAAA;IACIkB,SAAS,EAAC,yBAAyB;IACnCrB,KAAK,EAAE;MAAEgB,MAAM,EAAE,SAAS;MAAEM,UAAU,EAAE;IAAO,CAAE;IACjDP,OAAO,EAAEtB,SAAU;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACnB,CAEN,CAAC,eACPhE,KAAA,CAAA0D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAM,GAAC,EAACjD,mBAAmB,GAAG,CAAC,EAAC,GAAC,EAACE,gBAAgB,CAAC6B,MAAM,EAAC,GAAO,CACjE,CAAC,eAEL9C,KAAA,CAAA0D,aAAA;IAAKH,KAAK,EAAE;MACRuB,eAAe,EAAE,OAAO;MACxBC,OAAO,EAAE,MAAM;MACfC,YAAY,EAAE,KAAK;MACnBC,MAAM,EAAE,mBAAmB;MAC3BC,SAAS,EAAE,4BAA4B;MACvCC,SAAS,EAAE,MAAM;MACjBX,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE;IAChB,CAAE;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACGvD,aAAa,CAACmC,IAAI,CAAC,EAAE,CAAC,EACtBjC,WAAW,iBACRX,KAAA,CAAA0D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACIhE,KAAA,CAAA0D,aAAA;IAAGH,KAAK,EAAE;MAAE6B,KAAK,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAAA1B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEnD,YAAgB,CAAC,EAC/DA,YAAY,KAAK,GAAG,iBACjBb,KAAA,CAAA0D,aAAA;IAAGH,KAAK,EAAE;MAAE6B,KAAK,EAAE;IAAM,CAAE;IAAAzB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,gBAAI,EAACpC,cAAc,CAACE,YAAY,CAACc,IAAI,CAAC,EAAE,CAAK,CAE5E,CAER,CAAC,eACN5C,KAAA,CAAA0D,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACK7C,aAAa,CAACmC,GAAG,CAAC,CAACtB,IAAI,EAAEsD,KAAK,kBAC3BtF,KAAA,CAAA0D,aAAA;IAAK6B,GAAG,EAAED,KAAM;IAAC/B,KAAK,EAAE;MAAEiB,OAAO,EAAE,cAAc;MAAEgB,MAAM,EAAE,KAAK;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAA9B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpFhE,KAAA,CAAA0D,aAAA;IAAKH,KAAK,EAAE;MAAE6B,KAAK,EAAE,MAAM;MAAEC,QAAQ,EAAE;IAAQ,CAAE;IAAA1B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC5CZ,cAAc,CAAC,CAACpB,IAAI,CAAC,CAAC,CAAC,CAAC,CACxB,CAAC,eACNhC,KAAA,CAAA0D,aAAA;IACIY,OAAO,EAAEA,CAAA,KAAMvC,mBAAmB,CAACC,IAAI,CAAE;IACzCuB,KAAK,EAAE;MACHuB,eAAe,EAAErE,aAAa,CAACyB,QAAQ,CAACF,IAAI,CAAC,GAAG,YAAY,GAAG,WAAW;MAC1EqD,QAAQ,EAAE,MAAM;MAChBN,OAAO,EAAE,WAAW;MACpBE,MAAM,EAAE,MAAM;MACdD,YAAY,EAAE;IAClB,CAAE;IAAArB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEDhC,IACG,CACP,CACR,CACA,CAAC,eACNhC,KAAA,CAAA0D,aAAA;IAAKkB,SAAS,EAAC,wBAAwB;IAACrB,KAAK,EAAE;MAAEiB,OAAO,EAAE,MAAM;MAAEE,cAAc,EAAE,eAAe;MAAEgB,SAAS,EAAE;IAAO,CAAE;IAAA/B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnHhE,KAAA,CAAA0D,aAAA;IAAQY,OAAO,EAAE3D,WAAW,GAAGkC,WAAW,GAAGF,WAAY;IAACY,KAAK,EAAE;MAAE8B,QAAQ,EAAE;IAAO,CAAE;IAAA1B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACjFrD,WAAW,GAAG,IAAI,GAAG,IAClB,CACP,CAAC,eAGNX,KAAA,CAAA0D,aAAA;IAAKH,KAAK,EAAE;MAAEU,QAAQ,EAAE,OAAO;MAAE0B,MAAM,EAAE,MAAM;MAAExB,IAAI,EAAE;IAAO,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC5DhE,KAAA,CAAA0D,aAAA;IAAOH,KAAK,EAAE;MAAEiB,OAAO,EAAE,MAAM;MAAEC,UAAU,EAAE;IAAS,CAAE;IAAAd,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACpDhE,KAAA,CAAA0D,aAAA;IACIkC,IAAI,EAAC,UAAU;IACfC,OAAO,EAAExE,eAAgB;IACzByE,QAAQ,EAAErC,iBAAkB;IAC5BF,KAAK,EAAE;MAAEwC,WAAW,EAAE;IAAM,CAAE;IAAApC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjC,CAAC,8CAEC,CACN,CACJ,CAAC;AAEd,CAAC;AAED,eAAe1D,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}