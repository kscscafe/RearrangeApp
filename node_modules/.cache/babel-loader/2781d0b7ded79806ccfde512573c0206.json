{"ast":null,"code":"var _jsxFileName = \"/Users/ksugizaki/Library/CloudStorage/OneDrive-\\u500B\\u4EBA\\u7528/10_MacBookPro2018/\\u30E1\\u30E2\\u30FB\\u4F5C\\u696D\\u30ED\\u30AF\\u3099/RearrengeWebAPP/src/components/RearrangeSentence.js\";\n// src/components/RearrangeSentence.js\n\nimport React, { useState } from 'react';\nimport pinyin from 'pinyin'; // Pinyinライブラリをインポート\n\nconst RearrangeSentence = ({\n  group\n}) => {\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [resultSymbol, setResultSymbol] = useState(null);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [shuffledWords, setShuffledWords] = useState([]);\n  const currentProblem = group.problems[currentProblemIndex];\n\n  // ランダムに単語ボタンを生成（初回のみ）\n  const getRandomizedWords = () => {\n    if (shuffledWords.length === 0) {\n      const allWords = [...currentProblem.correctOrder]; // 正解の単語\n      const shuffled = allWords.sort(() => Math.random() - 0.5); // ランダム化\n      setShuffledWords(shuffled); // シャッフルした単語を保存\n    }\n    return shuffledWords.length > 0 ? shuffledWords : currentProblem.correctOrder;\n  };\n  const toggleWordSelection = word => {\n    setSelectedWords(prev => {\n      if (prev.includes(word)) {\n        return prev.filter(w => w !== word); // タップした場合は選択解除\n      } else {\n        return [...prev, word]; // タップした場合は選択追加\n      }\n    });\n    // 中国語で読み上げ\n    const utterance = new SpeechSynthesisUtterance(word);\n    utterance.lang = 'zh-CN'; // 中国語を設定\n    window.speechSynthesis.speak(utterance); // 読み上げ\n  };\n  const checkAnswer = () => {\n    if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n      setResultSymbol('⚪︎'); // 正解のシンボル\n    } else {\n      setResultSymbol('×'); // 不正解のシンボル\n    }\n    setIsConfirmed(true);\n  };\n  const nextProblem = () => {\n    if (currentProblemIndex < group.problems.length - 1) {\n      setCurrentProblemIndex(prev => prev + 1);\n      setSelectedWords([]);\n      setIsConfirmed(false);\n      setResultSymbol(null);\n      setShuffledWords([]); // 次の問題に進んだらシャッフルをリセット\n    } else {\n      // 最後の問題が終わった場合、結果を表示\n      alert(\"全ての問題が終了しました！\"); // 結果を表示\n    }\n  };\n\n  // Pinyinを生成する関数\n  const generatePinyin = words => {\n    return pinyin(words.join(''), {\n      style: pinyin.STYLE_TONE\n    }); // Pinyinを生成\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"\\u5358\\u8A9E\\u3092\\u30BF\\u30C3\\u30D7\\u3057\\u3066\\u6B63\\u3057\\u3044\\u9806\\u306B\\u4E26\\u3079\\u66FF\\u3048\\u3066\\u304F\\u3060\\u3055\\u3044\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, currentProblem.translation), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: '#f0f0f0',\n      padding: '10px',\n      borderRadius: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, \"\\u9078\\u629E\\u3055\\u308C\\u305F\\u5358\\u8A9E: \", selectedWords.join(' ')), isConfirmed && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red',\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, resultSymbol), resultSymbol === '×' && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"\\u6B63\\u89E3: \", currentProblem.correctOrder.join(' ')))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, getRandomizedWords().map((word, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      display: 'inline-block',\n      margin: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleWordSelection(word),\n    style: {\n      backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue' // 選択時の色変更\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, word), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'gray',\n      fontSize: '0.8em',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 25\n    }\n  }, generatePinyin([word])[0], \" \")))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: isConfirmed ? nextProblem : checkAnswer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, isConfirmed ? '次へ' : '確定'));\n};\nexport default RearrangeSentence;","map":{"version":3,"names":["React","useState","pinyin","RearrangeSentence","group","selectedWords","setSelectedWords","isConfirmed","setIsConfirmed","resultSymbol","setResultSymbol","currentProblemIndex","setCurrentProblemIndex","shuffledWords","setShuffledWords","currentProblem","problems","getRandomizedWords","length","allWords","correctOrder","shuffled","sort","Math","random","toggleWordSelection","word","prev","includes","filter","w","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","checkAnswer","join","nextProblem","alert","generatePinyin","words","style","STYLE_TONE","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","translation","backgroundColor","padding","borderRadius","color","fontSize","map","index","key","display","margin","onClick","textAlign"],"sources":["/Users/ksugizaki/Library/CloudStorage/OneDrive-個人用/10_MacBookPro2018/メモ・作業ログ/RearrengeWebAPP/src/components/RearrangeSentence.js"],"sourcesContent":["// src/components/RearrangeSentence.js\n\nimport React, { useState } from 'react';\nimport pinyin from 'pinyin'; // Pinyinライブラリをインポート\n\nconst RearrangeSentence = ({ group }) => {\n    const [selectedWords, setSelectedWords] = useState([]);\n    const [isConfirmed, setIsConfirmed] = useState(false);\n    const [resultSymbol, setResultSymbol] = useState(null);\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n    const [shuffledWords, setShuffledWords] = useState([]);\n\n    const currentProblem = group.problems[currentProblemIndex];\n\n    // ランダムに単語ボタンを生成（初回のみ）\n    const getRandomizedWords = () => {\n        if (shuffledWords.length === 0) {\n            const allWords = [...currentProblem.correctOrder]; // 正解の単語\n            const shuffled = allWords.sort(() => Math.random() - 0.5); // ランダム化\n            setShuffledWords(shuffled); // シャッフルした単語を保存\n        }\n        return shuffledWords.length > 0 ? shuffledWords : currentProblem.correctOrder;\n    };\n\n    const toggleWordSelection = (word) => {\n        setSelectedWords(prev => {\n            if (prev.includes(word)) {\n                return prev.filter(w => w !== word); // タップした場合は選択解除\n            } else {\n                return [...prev, word]; // タップした場合は選択追加\n            }\n        });\n        // 中国語で読み上げ\n        const utterance = new SpeechSynthesisUtterance(word);\n        utterance.lang = 'zh-CN'; // 中国語を設定\n        window.speechSynthesis.speak(utterance); // 読み上げ\n    };\n\n    const checkAnswer = () => {\n        if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n            setResultSymbol('⚪︎'); // 正解のシンボル\n        } else {\n            setResultSymbol('×'); // 不正解のシンボル\n        }\n        setIsConfirmed(true);\n    };\n\n    const nextProblem = () => {\n        if (currentProblemIndex < group.problems.length - 1) {\n            setCurrentProblemIndex(prev => prev + 1);\n            setSelectedWords([]);\n            setIsConfirmed(false);\n            setResultSymbol(null);\n            setShuffledWords([]); // 次の問題に進んだらシャッフルをリセット\n        } else {\n            // 最後の問題が終わった場合、結果を表示\n            alert(\"全ての問題が終了しました！\"); // 結果を表示\n        }\n    };\n\n    // Pinyinを生成する関数\n    const generatePinyin = (words) => {\n        return pinyin(words.join(''), { style: pinyin.STYLE_TONE }); // Pinyinを生成\n    };\n\n    return (\n        <div>\n            <h3>単語をタップして正しい順に並べ替えてください</h3>\n            <h2>{currentProblem.translation}</h2>\n            <div style={{ backgroundColor: '#f0f0f0', padding: '10px', borderRadius: '5px' }}>\n                <h3>選択された単語: {selectedWords.join(' ')}</h3>\n                {isConfirmed && (\n                    <div>\n                        <p style={{ color: 'red', fontSize: '20px' }}>{resultSymbol}</p>\n                        {resultSymbol === '×' && (\n                            <p style={{ color: 'red' }}>正解: {currentProblem.correctOrder.join(' ')}</p>\n                        )}\n                    </div>\n                )}\n            </div>\n            <div>\n                {getRandomizedWords().map((word, index) => (\n                    <div key={index} style={{ display: 'inline-block', margin: '5px' }}>\n                        <button\n                            onClick={() => toggleWordSelection(word)}\n                            style={{\n                                backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue' // 選択時の色変更\n                            }}\n                        >\n                            {word}\n                        </button>\n                        <div style={{ color: 'gray', fontSize: '0.8em', textAlign: 'center' }}>\n                            {generatePinyin([word])[0]} {/* Pinyinを表示 */}\n                        </div>\n                    </div>\n                ))}\n            </div>\n            <button onClick={isConfirmed ? nextProblem : checkAnswer}>\n                {isConfirmed ? '次へ' : '確定'}\n            </button>\n        </div>\n    );\n};\n\nexport default RearrangeSentence;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}