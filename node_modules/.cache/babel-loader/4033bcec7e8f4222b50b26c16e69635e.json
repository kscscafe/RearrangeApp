{"ast":null,"code":"var _jsxFileName = \"/Users/ksugizaki/Library/CloudStorage/OneDrive-\\u500B\\u4EBA\\u7528/10_MacBookPro2018/\\u30E1\\u30E2\\u30FB\\u4F5C\\u696D\\u30ED\\u30AF\\u3099/RearrengeWebAPP/src/components/RearrangeSentence.js\";\nimport React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHouse } from '@fortawesome/free-solid-svg-icons';\nimport pinyin from 'pinyin'; // Pinyinライブラリをインポート\n\nconst RearrangeSentence = ({\n  group\n}) => {\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [resultSymbol, setResultSymbol] = useState(null);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [shuffledProblems, setShuffledProblems] = useState([]);\n  const [shuffledWords, setShuffledWords] = useState([]);\n  const [showTranslation, setShowTranslation] = useState(true); // 日本語訳のオン/オフ\n\n  // 問題をシャッフル\n  useEffect(() => {\n    const shuffled = [...group.problems].sort(() => Math.random() - 0.5);\n    setShuffledProblems(shuffled);\n    setCurrentProblemIndex(0); // 最初の問題インデックスをリセット\n    setSelectedWords([]); // 選択された単語をリセット\n    setIsConfirmed(false); // 確認フラグをリセット\n    setResultSymbol(null); // 結果シンボルをリセット\n  }, [group]);\n  const currentProblem = shuffledProblems[currentProblemIndex]; // シャッフルされた問題から現在の問題を取得\n\n  // 問題が変更されたときに単語をシャッフル\n  useEffect(() => {\n    if (currentProblem) {\n      const allWords = [...currentProblem.correctOrder]; // 正解の単語\n      const shuffled = allWords.sort(() => Math.random() - 0.5); // ランダム化\n      setShuffledWords(shuffled); // シャッフルした単語を保存\n    }\n  }, [currentProblem]);\n  const toggleWordSelection = word => {\n    setSelectedWords(prev => {\n      if (prev.includes(word)) {\n        return prev.filter(w => w !== word); // タップした場合は選択解除\n      } else {\n        return [...prev, word]; // タップした場合は選択追加\n      }\n    });\n\n    // 読み上げ機能（特定の文字を除外）\n    if (!['?', '!', '？', '！'].includes(word)) {\n      const utterance = new SpeechSynthesisUtterance(word);\n      utterance.lang = 'zh-CN'; // 中国語を設定\n      window.speechSynthesis.speak(utterance); // 読み上げ\n    }\n  };\n  const checkAnswer = () => {\n    if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n      setResultSymbol('⚪︎'); // 正解のシンボル\n    } else {\n      setResultSymbol('×'); // 不正解のシンボル\n    }\n    setIsConfirmed(true);\n  };\n  const nextProblem = () => {\n    if (currentProblemIndex < shuffledProblems.length - 1) {\n      setCurrentProblemIndex(prev => prev + 1);\n      setSelectedWords([]);\n      setIsConfirmed(false);\n      setResultSymbol(null);\n      setShuffledWords([]); // 次の問題に進んだらシャッフルをリセット\n    } else {\n      // 最後の問題が終わった場合、結果を表示\n      alert(\"全ての問題が終了しました！\"); // 結果を表示\n    }\n  };\n\n  // 音声を再生する関数\n  const playAudio = () => {\n    if (currentProblem && currentProblem.audio) {\n      const audio = new Audio(currentProblem.audio);\n      audio.play();\n    }\n  };\n\n  // Pinyinを生成する関数\n  const generatePinyin = words => {\n    return words.map(word => pinyin(word, {\n      style: pinyin.STYLE_TONE\n    }).join('')); // 各単語のPinyinを生成\n  };\n\n  // 日本語訳の表示を切り替える関数\n  const toggleTranslation = () => {\n    setShowTranslation(prev => !prev);\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'fixed',\n      top: '20px',\n      left: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => window.location.href = '/' // ホームへのリンク\n    ,\n    style: {\n      padding: '10px 15px',\n      backgroundColor: 'orange',\n      color: 'white',\n      border: 'none',\n      borderRadius: '5px',\n      cursor: 'pointer',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faHouse,\n    style: {\n      marginRight: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }), \"\\u30DB\\u30FC\\u30E0\\u306B\\u623B\\u308B\")), /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, showTranslation && currentProblem ? currentProblem.translation : '聞こえたとおりにタップしてください', currentProblem && currentProblem.audio && /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa-solid fa-circle-play\",\n    style: {\n      cursor: 'pointer',\n      marginLeft: '10px'\n    },\n    onClick: playAudio // 音声再生をトリガー\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 17\n    }\n  }, \"(\", currentProblemIndex + 1, \"/\", shuffledProblems.length, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      padding: '10px',\n      borderRadius: '5px',\n      border: '2px solid #f0f0f0',\n      boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)',\n      minHeight: '60px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, selectedWords.join(''), isConfirmed && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red',\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, resultSymbol), resultSymbol === '×' && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 29\n    }\n  }, \"\\u6B63\\u89E3: \", currentProblem.correctOrder.join('')))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, shuffledWords.map((word, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      display: 'inline-block',\n      margin: '5px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'gray',\n      fontSize: '0.8em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 25\n    }\n  }, generatePinyin([word])[0]), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleWordSelection(word),\n    style: {\n      backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue',\n      fontSize: '20px',\n      // ボタンの文字サイズを指定\n      padding: '10px 15px',\n      // ボタンのパディングを設定\n      border: 'none',\n      // 枠線を無しに\n      borderRadius: '5px' // 角を丸くする\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, word)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixed-button-container\",\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      marginTop: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: isConfirmed ? nextProblem : checkAnswer,\n    style: {\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, isConfirmed ? '次へ' : '確定')), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: '20px',\n      left: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    style: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: showTranslation,\n    onChange: toggleTranslation,\n    style: {\n      marginRight: '8px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }), \"\\u65E5\\u672C\\u8A9E\\u8A33\\u3092\\u8868\\u793A\")));\n};\nexport default RearrangeSentence;","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faHouse","pinyin","RearrangeSentence","group","selectedWords","setSelectedWords","isConfirmed","setIsConfirmed","resultSymbol","setResultSymbol","currentProblemIndex","setCurrentProblemIndex","shuffledProblems","setShuffledProblems","shuffledWords","setShuffledWords","showTranslation","setShowTranslation","shuffled","problems","sort","Math","random","currentProblem","allWords","correctOrder","toggleWordSelection","word","prev","includes","filter","w","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","checkAnswer","join","nextProblem","length","alert","playAudio","audio","Audio","play","generatePinyin","words","map","style","STYLE_TONE","toggleTranslation","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","position","top","left","onClick","location","href","padding","backgroundColor","color","border","borderRadius","cursor","display","alignItems","icon","marginRight","justifyContent","translation","className","marginLeft","boxShadow","minHeight","fontSize","index","key","margin","textAlign","marginTop","bottom","type","checked","onChange"],"sources":["/Users/ksugizaki/Library/CloudStorage/OneDrive-個人用/10_MacBookPro2018/メモ・作業ログ/RearrengeWebAPP/src/components/RearrangeSentence.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHouse } from '@fortawesome/free-solid-svg-icons';\nimport pinyin from 'pinyin'; // Pinyinライブラリをインポート\n\nconst RearrangeSentence = ({ group }) => {\n    const [selectedWords, setSelectedWords] = useState([]);\n    const [isConfirmed, setIsConfirmed] = useState(false);\n    const [resultSymbol, setResultSymbol] = useState(null);\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n    const [shuffledProblems, setShuffledProblems] = useState([]);\n    const [shuffledWords, setShuffledWords] = useState([]);\n    const [showTranslation, setShowTranslation] = useState(true); // 日本語訳のオン/オフ\n\n    // 問題をシャッフル\n    useEffect(() => {\n        const shuffled = [...group.problems].sort(() => Math.random() - 0.5);\n        setShuffledProblems(shuffled);\n        setCurrentProblemIndex(0); // 最初の問題インデックスをリセット\n        setSelectedWords([]); // 選択された単語をリセット\n        setIsConfirmed(false); // 確認フラグをリセット\n        setResultSymbol(null); // 結果シンボルをリセット\n    }, [group]);\n\n    const currentProblem = shuffledProblems[currentProblemIndex]; // シャッフルされた問題から現在の問題を取得\n\n    // 問題が変更されたときに単語をシャッフル\n    useEffect(() => {\n        if (currentProblem) {\n            const allWords = [...currentProblem.correctOrder]; // 正解の単語\n            const shuffled = allWords.sort(() => Math.random() - 0.5); // ランダム化\n            setShuffledWords(shuffled); // シャッフルした単語を保存\n        }\n    }, [currentProblem]);\n\n    const toggleWordSelection = (word) => {\n        setSelectedWords(prev => {\n            if (prev.includes(word)) {\n                return prev.filter(w => w !== word); // タップした場合は選択解除\n            } else {\n                return [...prev, word]; // タップした場合は選択追加\n            }\n        });\n\n        // 読み上げ機能（特定の文字を除外）\n        if (!['?', '!', '？', '！'].includes(word)) {\n            const utterance = new SpeechSynthesisUtterance(word);\n            utterance.lang = 'zh-CN'; // 中国語を設定\n            window.speechSynthesis.speak(utterance); // 読み上げ\n        }\n    };\n\n    const checkAnswer = () => {\n        if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n            setResultSymbol('⚪︎'); // 正解のシンボル\n        } else {\n            setResultSymbol('×'); // 不正解のシンボル\n        }\n        setIsConfirmed(true);\n    };\n\n    const nextProblem = () => {\n        if (currentProblemIndex < shuffledProblems.length - 1) {\n            setCurrentProblemIndex(prev => prev + 1);\n            setSelectedWords([]);\n            setIsConfirmed(false);\n            setResultSymbol(null);\n            setShuffledWords([]); // 次の問題に進んだらシャッフルをリセット\n        } else {\n            // 最後の問題が終わった場合、結果を表示\n            alert(\"全ての問題が終了しました！\"); // 結果を表示\n        }\n    };\n\n    // 音声を再生する関数\n    const playAudio = () => {\n        if (currentProblem && currentProblem.audio) {\n            const audio = new Audio(currentProblem.audio);\n            audio.play();\n        }\n    };\n\n    // Pinyinを生成する関数\n    const generatePinyin = (words) => {\n        return words.map(word => pinyin(word, { style: pinyin.STYLE_TONE }).join('')); // 各単語のPinyinを生成\n    };\n\n    // 日本語訳の表示を切り替える関数\n    const toggleTranslation = () => {\n        setShowTranslation(prev => !prev);\n    };\n\n    return (\n        <div>\n            {/* ホームアイコン付きの「ホームに戻る」ボタンを左上に配置 */}\n            <div style={{ position: 'fixed', top: '20px', left: '20px' }}>\n                <button\n                    onClick={() => window.location.href = '/'} // ホームへのリンク\n                    style={{\n                        padding: '10px 15px',\n                        backgroundColor: 'orange',\n                        color: 'white',\n                        border: 'none',\n                        borderRadius: '5px',\n                        cursor: 'pointer',\n                        display: 'flex',\n                        alignItems: 'center'\n                    }}\n                >\n                    <FontAwesomeIcon icon={faHouse} style={{ marginRight: '8px' }} />\n                    ホームに戻る\n                </button>\n            </div>\n\n            {/* 問題数と出題順を表示 */}\n            <h2 style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\n                <span style={{ display: 'flex', alignItems: 'center' }}>\n                    {/* 日本語訳の表示をオンにした場合のみ表示 */}\n                    {showTranslation && currentProblem\n                        ? currentProblem.translation \n                        : '聞こえたとおりにタップしてください'}\n                    {/* 再生ボタンを日本語訳のすぐ右側に表示 */}\n                    {currentProblem && currentProblem.audio && (\n                        <i \n                            className=\"fa-solid fa-circle-play\" \n                            style={{ cursor: 'pointer', marginLeft: '10px' }} \n                            onClick={playAudio} // 音声再生をトリガー\n                        ></i>\n                    )}\n                </span>\n                <span>({currentProblemIndex + 1}/{shuffledProblems.length})</span>\n            </h2>\n            <div style={{ \n                backgroundColor: 'white', \n                padding: '10px', \n                borderRadius: '5px',\n                border: '2px solid #f0f0f0', \n                boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)', \n                minHeight: '60px', \n                display: 'flex',\n                alignItems: 'center' \n            }}>\n                {selectedWords.join('')} \n                {isConfirmed && (\n                    <div>\n                        <p style={{ color: 'red', fontSize: '20px' }}>{resultSymbol}</p>\n                        {resultSymbol === '×' && (\n                            <p style={{ color: 'red' }}>正解: {currentProblem.correctOrder.join('')}</p>\n                        )}\n                    </div>\n                )}\n            </div>\n            <div>\n                {shuffledWords.map((word, index) => (\n                    <div key={index} style={{ display: 'inline-block', margin: '5px', textAlign: 'center' }}>\n                        <div style={{ color: 'gray', fontSize: '0.8em' }}>\n                            {generatePinyin([word])[0]} \n                        </div>\n                        <button\n                            onClick={() => toggleWordSelection(word)}\n                            style={{\n                                backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue',\n                                fontSize: '20px', // ボタンの文字サイズを指定\n                                padding: '10px 15px', // ボタンのパディングを設定\n                                border: 'none', // 枠線を無しに\n                                borderRadius: '5px' // 角を丸くする\n                            }}\n                        >\n                            {word}\n                        </button>\n                    </div>\n                ))}\n            </div>\n            <div className=\"fixed-button-container\" style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n                <button onClick={isConfirmed ? nextProblem : checkAnswer} style={{ fontSize: '18px' }}>\n                    {isConfirmed ? '次へ' : '確定'}\n                </button>\n            </div>\n\n            {/* 日本語訳オン/オフスイッチを画面の左下に配置 */}\n            <div style={{ position: 'fixed', bottom: '20px', left: '20px' }}>\n                <label style={{ display: 'flex', alignItems: 'center' }}>\n                    <input\n                        type=\"checkbox\"\n                        checked={showTranslation}\n                        onChange={toggleTranslation}\n                        style={{ marginRight: '8px' }}\n                    />\n                    日本語訳を表示\n                </label>\n            </div>\n        </div>\n    );\n};\n\nexport default RearrangeSentence;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}