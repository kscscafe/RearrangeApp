{"ast":null,"code":"var _jsxFileName = \"/Users/ksugizaki/Library/CloudStorage/OneDrive-\\u500B\\u4EBA\\u7528/10_MacBookPro2018/\\u30E1\\u30E2\\u30FB\\u4F5C\\u696D\\u30ED\\u30AF\\u3099/RearrengeWebAPP/src/components/RearrangeSentence.js\";\nimport React, { useState, useEffect } from 'react';\nimport pinyin from 'pinyin'; // Pinyinライブラリをインポート\n\nconst RearrangeSentence = ({\n  group\n}) => {\n  const [selectedWords, setSelectedWords] = useState([]);\n  const [isConfirmed, setIsConfirmed] = useState(false);\n  const [resultSymbol, setResultSymbol] = useState(null);\n  const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n  const [shuffledWords, setShuffledWords] = useState([]);\n  const [shuffledProblems, setShuffledProblems] = useState([]);\n\n  // 問題をシャッフル\n  useEffect(() => {\n    const shuffled = [...group.problems].sort(() => Math.random() - 0.5);\n    setShuffledProblems(shuffled);\n    setCurrentProblemIndex(0); // 最初の問題インデックスをリセット\n    setSelectedWords([]); // 選択された単語をリセット\n    setIsConfirmed(false); // 確認フラグをリセット\n    setResultSymbol(null); // 結果シンボルをリセット\n    setShuffledWords([]); // シャッフルされた単語をリセット\n  }, [group]);\n  const currentProblem = shuffledProblems[currentProblemIndex]; // シャッフルされた問題から現在の問題を取得\n\n  // ランダムに単語ボタンを生成（初回のみ）\n  const getRandomizedWords = () => {\n    if (shuffledWords.length === 0 && currentProblem) {\n      const allWords = [...currentProblem.correctOrder]; // 正解の単語\n      const shuffled = allWords.sort(() => Math.random() - 0.5); // ランダム化\n      setShuffledWords(shuffled); // シャッフルした単語を保存\n    }\n    return shuffledWords.length > 0 ? shuffledWords : currentProblem.correctOrder;\n  };\n  const toggleWordSelection = word => {\n    setSelectedWords(prev => {\n      if (prev.includes(word)) {\n        return prev.filter(w => w !== word); // タップした場合は選択解除\n      } else {\n        return [...prev, word]; // タップした場合は選択追加\n      }\n    });\n\n    // 読み上げ機能（特定の文字を除外）\n    if (!['?', '!', '？', '！'].includes(word)) {\n      const utterance = new SpeechSynthesisUtterance(word);\n      utterance.lang = 'zh-CN'; // 中国語を設定\n      window.speechSynthesis.speak(utterance); // 読み上げ\n    }\n  };\n  const checkAnswer = () => {\n    if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n      setResultSymbol('⚪︎'); // 正解のシンボル\n    } else {\n      setResultSymbol('×'); // 不正解のシンボル\n    }\n    setIsConfirmed(true);\n  };\n  const nextProblem = () => {\n    if (currentProblemIndex < shuffledProblems.length - 1) {\n      setCurrentProblemIndex(prev => prev + 1);\n      setSelectedWords([]);\n      setIsConfirmed(false);\n      setResultSymbol(null);\n      setShuffledWords([]); // 次の問題に進んだらシャッフルをリセット\n    } else {\n      // 最後の問題が終わった場合、結果を表示\n      alert(\"全ての問題が終了しました！\"); // 結果を表示\n    }\n  };\n\n  // Pinyinを生成する関数\n  const generatePinyin = words => {\n    return words.map(word => pinyin(word, {\n      style: pinyin.STYLE_TONE\n    }).join('')); // 各単語のPinyinを生成\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }, currentProblem ? currentProblem.translation : '問題がありません'), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, \"(\", currentProblemIndex + 1, \"/\", shuffledProblems.length, \")\")), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      backgroundColor: 'white',\n      padding: '10px',\n      borderRadius: '5px',\n      border: '2px solid #f0f0f0',\n      boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)',\n      minHeight: '60px',\n      display: 'flex',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, selectedWords.join(''), isConfirmed && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red',\n      fontSize: '20px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, resultSymbol), resultSymbol === '×' && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"\\u6B63\\u89E3: \", currentProblem.correctOrder.join('')))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, getRandomizedWords().map((word, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    style: {\n      display: 'inline-block',\n      margin: '5px',\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      color: 'gray',\n      fontSize: '0.8em'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 25\n    }\n  }, generatePinyin([word])[0]), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => toggleWordSelection(word),\n    style: {\n      backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue',\n      fontSize: '20px',\n      // ボタンの文字サイズを指定\n      padding: '10px 15px',\n      // ボタンのパディングを設定\n      border: 'none',\n      // 枠線を無しに\n      borderRadius: '5px' // 角を丸くする\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 25\n    }\n  }, word)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"fixed-button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: isConfirmed ? nextProblem : checkAnswer,\n    style: {\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, isConfirmed ? '次へ' : '確定')));\n};\nexport default RearrangeSentence;","map":{"version":3,"names":["React","useState","useEffect","pinyin","RearrangeSentence","group","selectedWords","setSelectedWords","isConfirmed","setIsConfirmed","resultSymbol","setResultSymbol","currentProblemIndex","setCurrentProblemIndex","shuffledWords","setShuffledWords","shuffledProblems","setShuffledProblems","shuffled","problems","sort","Math","random","currentProblem","getRandomizedWords","length","allWords","correctOrder","toggleWordSelection","word","prev","includes","filter","w","utterance","SpeechSynthesisUtterance","lang","window","speechSynthesis","speak","checkAnswer","join","nextProblem","alert","generatePinyin","words","map","style","STYLE_TONE","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","display","justifyContent","translation","backgroundColor","padding","borderRadius","border","boxShadow","minHeight","alignItems","color","fontSize","index","key","margin","textAlign","onClick","className"],"sources":["/Users/ksugizaki/Library/CloudStorage/OneDrive-個人用/10_MacBookPro2018/メモ・作業ログ/RearrengeWebAPP/src/components/RearrangeSentence.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport pinyin from 'pinyin'; // Pinyinライブラリをインポート\n\nconst RearrangeSentence = ({ group }) => {\n    const [selectedWords, setSelectedWords] = useState([]);\n    const [isConfirmed, setIsConfirmed] = useState(false);\n    const [resultSymbol, setResultSymbol] = useState(null);\n    const [currentProblemIndex, setCurrentProblemIndex] = useState(0);\n    const [shuffledWords, setShuffledWords] = useState([]);\n    const [shuffledProblems, setShuffledProblems] = useState([]);\n\n    // 問題をシャッフル\n    useEffect(() => {\n        const shuffled = [...group.problems].sort(() => Math.random() - 0.5);\n        setShuffledProblems(shuffled);\n        setCurrentProblemIndex(0); // 最初の問題インデックスをリセット\n        setSelectedWords([]); // 選択された単語をリセット\n        setIsConfirmed(false); // 確認フラグをリセット\n        setResultSymbol(null); // 結果シンボルをリセット\n        setShuffledWords([]); // シャッフルされた単語をリセット\n    }, [group]);\n\n    const currentProblem = shuffledProblems[currentProblemIndex]; // シャッフルされた問題から現在の問題を取得\n\n    // ランダムに単語ボタンを生成（初回のみ）\n    const getRandomizedWords = () => {\n        if (shuffledWords.length === 0 && currentProblem) {\n            const allWords = [...currentProblem.correctOrder]; // 正解の単語\n            const shuffled = allWords.sort(() => Math.random() - 0.5); // ランダム化\n            setShuffledWords(shuffled); // シャッフルした単語を保存\n        }\n        return shuffledWords.length > 0 ? shuffledWords : currentProblem.correctOrder;\n    };\n\n    const toggleWordSelection = (word) => {\n        setSelectedWords(prev => {\n            if (prev.includes(word)) {\n                return prev.filter(w => w !== word); // タップした場合は選択解除\n            } else {\n                return [...prev, word]; // タップした場合は選択追加\n            }\n        });\n\n        // 読み上げ機能（特定の文字を除外）\n        if (!['?', '!', '？', '！'].includes(word)) {\n            const utterance = new SpeechSynthesisUtterance(word);\n            utterance.lang = 'zh-CN'; // 中国語を設定\n            window.speechSynthesis.speak(utterance); // 読み上げ\n        }\n    };\n\n    const checkAnswer = () => {\n        if (selectedWords.join(',') === currentProblem.correctOrder.join(',')) {\n            setResultSymbol('⚪︎'); // 正解のシンボル\n        } else {\n            setResultSymbol('×'); // 不正解のシンボル\n        }\n        setIsConfirmed(true);\n    };\n\n    const nextProblem = () => {\n        if (currentProblemIndex < shuffledProblems.length - 1) {\n            setCurrentProblemIndex(prev => prev + 1);\n            setSelectedWords([]);\n            setIsConfirmed(false);\n            setResultSymbol(null);\n            setShuffledWords([]); // 次の問題に進んだらシャッフルをリセット\n        } else {\n            // 最後の問題が終わった場合、結果を表示\n            alert(\"全ての問題が終了しました！\"); // 結果を表示\n        }\n    };\n\n    // Pinyinを生成する関数\n    const generatePinyin = (words) => {\n        return words.map(word => pinyin(word, { style: pinyin.STYLE_TONE }).join('')); // 各単語のPinyinを生成\n    };\n\n    return (\n        <div>\n            {/* 問題数と出題順を表示 */}\n            <h2 style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <span>{currentProblem ? currentProblem.translation : '問題がありません'}</span>\n                <span>({currentProblemIndex + 1}/{shuffledProblems.length})</span>\n            </h2>\n            <div style={{ \n                backgroundColor: 'white', \n                padding: '10px', \n                borderRadius: '5px',\n                border: '2px solid #f0f0f0', \n                boxShadow: '0 0 5px rgba(0, 0, 0, 0.2)', \n                minHeight: '60px', \n                display: 'flex',\n                alignItems: 'center' \n            }}>\n                {selectedWords.join('')} \n                {isConfirmed && (\n                    <div>\n                        <p style={{ color: 'red', fontSize: '20px' }}>{resultSymbol}</p>\n                        {resultSymbol === '×' && (\n                            <p style={{ color: 'red' }}>正解: {currentProblem.correctOrder.join('')}</p>\n                        )}\n                    </div>\n                )}\n            </div>\n            <div>\n                {getRandomizedWords().map((word, index) => (\n                    <div key={index} style={{ display: 'inline-block', margin: '5px', textAlign: 'center' }}>\n                        <div style={{ color: 'gray', fontSize: '0.8em' }}>\n                            {generatePinyin([word])[0]} \n                        </div>\n                        <button\n                            onClick={() => toggleWordSelection(word)}\n                            style={{\n                                backgroundColor: selectedWords.includes(word) ? 'lightgreen' : 'lightblue',\n                                fontSize: '20px', // ボタンの文字サイズを指定\n                                padding: '10px 15px', // ボタンのパディングを設定\n                                border: 'none', // 枠線を無しに\n                                borderRadius: '5px' // 角を丸くする\n                            }}\n                        >\n                            {word}\n                        </button>\n                    </div>\n                ))}\n            </div>\n            <div className=\"fixed-button-container\">\n                <button onClick={isConfirmed ? nextProblem : checkAnswer} style={{ fontSize: '18px' }}>\n                    {isConfirmed ? '次へ' : '確定'}\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default RearrangeSentence;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}